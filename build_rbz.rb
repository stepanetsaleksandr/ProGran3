# build_rbz.rb
# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .rbz –∞—Ä—Ö—ñ–≤—É –ø–ª–∞–≥—ñ–Ω–∞ ProGran3 –¥–ª—è –¥–µ–ø–ª–æ—é

require 'zip'
require 'fileutils'
require 'json'

class PluginBuilder
  PLUGIN_NAME = 'proGran3'
  VERSION = '3.2.1'
  OUTPUT_DIR = 'dist'
  
  # –§–∞–π–ª–∏ —è–∫—ñ –ù–ï –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–ª—é—á–∞—Ç–∏ –≤ –∑–±—ñ—Ä–∫—É
  EXCLUDE_PATTERNS = [
    /\.git/,
    /\.rbz$/,
    /\.log$/,
    /\.tmp$/,
    /~$/,
    /production_test\.rb$/,
    /TEST_.*\.rb$/,
    /backups\//,
    /\.DS_Store/,
    /Thumbs\.db/
  ]
  
  def initialize
    @plugin_dir = File.expand_path('plugin', __dir__)
    @output_dir = File.expand_path(OUTPUT_DIR, __dir__)
    @timestamp = Time.now.strftime('%Y%m%d_%H%M%S')
  end
  
  def build
    puts "üèóÔ∏è –ó–±—ñ—Ä–∫–∞ –ø–ª–∞–≥—ñ–Ω–∞ #{PLUGIN_NAME} v#{VERSION}"
    puts "=" * 60
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ output –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
    FileUtils.mkdir_p(@output_dir)
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ —ñ–º'—è —Ñ–∞–π–ª—É
    rbz_filename = "#{PLUGIN_NAME}_v#{VERSION}_#{@timestamp}.rbz"
    rbz_path = File.join(@output_dir, rbz_filename)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–ª–∞–≥—ñ–Ω–∞
    unless Dir.exist?(@plugin_dir)
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è plugin/ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"
      return false
    end
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ .rbz –∞—Ä—Ö—ñ–≤
    create_rbz(rbz_path)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if File.exist?(rbz_path)
      file_size = File.size(rbz_path) / 1024.0 / 1024.0
      puts "\n‚úÖ –ó–±—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!"
      puts "üì¶ –§–∞–π–ª: #{rbz_filename}"
      puts "üìè –†–æ–∑–º—ñ—Ä: #{file_size.round(2)} MB"
      puts "üìÇ –®–ª—è—Ö: #{rbz_path}"
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ symlink –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—é –≤–µ—Ä—Å—ñ—é
      create_latest_symlink(rbz_path, rbz_filename)
      
      # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
      print_installation_instructions(rbz_filename)
      
      true
    else
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è .rbz —Ñ–∞–π–ª—É"
      false
    end
  end
  
  private
  
  def create_rbz(output_path)
    puts "\nüì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .rbz –∞—Ä—Ö—ñ–≤—É..."
    
    file_count = 0
    
    Zip::File.open(output_path, create: true) do |zipfile|
      # –î–æ–¥–∞—î–º–æ loader (—Ç–æ—á–∫–∞ –≤—Ö–æ–¥—É –¥–ª—è Extension Manager)
      loader_file = File.join(@plugin_dir, "#{PLUGIN_NAME}_loader.rb")
      if File.exist?(loader_file)
        add_to_zip(zipfile, loader_file, "#{PLUGIN_NAME}.rb")  # –ú–∞—î –±—É—Ç–∏ .rb –¥–ª—è –∞–≤—Ç–æ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        file_count += 1
        puts "  ‚úì #{PLUGIN_NAME}.rb (loader)"
      end
      
      # –î–æ–¥–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –ø–ª–∞–≥—ñ–Ω–∞
      main_file = File.join(@plugin_dir, "#{PLUGIN_NAME}.rb")
      if File.exist?(main_file)
        add_to_zip(zipfile, main_file, "#{PLUGIN_NAME}/#{PLUGIN_NAME}_core.rb")
        file_count += 1
        puts "  ‚úì #{PLUGIN_NAME}/#{PLUGIN_NAME}_core.rb"
      end
      
      # –î–æ–¥–∞—î–º–æ –≤—Å—ñ —Ñ–∞–π–ª–∏ –∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó proGran3/
      plugin_subdir = File.join(@plugin_dir, PLUGIN_NAME)
      if Dir.exist?(plugin_subdir)
        Dir.glob(File.join(plugin_subdir, '**', '*')).each do |file|
          next if File.directory?(file)
          next if should_exclude?(file)
          
          # –í—ñ–¥–Ω–æ—Å–Ω–∏–π —à–ª—è—Ö
          relative_path = file.sub("#{@plugin_dir}/", '')
          
          add_to_zip(zipfile, file, relative_path)
          file_count += 1
          
          # –í–∏–≤–æ–¥–∏–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∫–æ–∂–Ω—ñ 10 —Ñ–∞–π–ª—ñ–≤
          puts "  ‚úì #{relative_path}" if file_count % 10 == 0
        end
      end
      
      # –î–æ–¥–∞—î–º–æ config.json
      config_file = File.join(@plugin_dir, 'config.json')
      if File.exist?(config_file)
        add_to_zip(zipfile, config_file, 'config.json')
        file_count += 1
        puts "  ‚úì config.json"
      end
    end
    
    puts "\nüìä –î–æ–¥–∞–Ω–æ —Ñ–∞–π–ª—ñ–≤: #{file_count}"
  end
  
  def add_to_zip(zipfile, file_path, zip_path)
    zipfile.add(zip_path, file_path)
  rescue Zip::EntryExistsError
    puts "  ‚ö†Ô∏è –§–∞–π–ª #{zip_path} –≤–∂–µ —ñ—Å–Ω—É—î –≤ –∞—Ä—Ö—ñ–≤—ñ"
  end
  
  def should_exclude?(file_path)
    EXCLUDE_PATTERNS.any? { |pattern| file_path =~ pattern }
  end
  
  def create_latest_symlink(rbz_path, rbz_filename)
    latest_path = File.join(@output_dir, "#{PLUGIN_NAME}_latest.rbz")
    
    begin
      File.delete(latest_path) if File.exist?(latest_path)
      FileUtils.cp(rbz_path, latest_path)
      puts "\nüîó –°—Ç–≤–æ—Ä–µ–Ω–æ symlink: #{PLUGIN_NAME}_latest.rbz"
    rescue => e
      puts "\n‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ symlink: #{e.message}"
    end
  end
  
  def print_installation_instructions(filename)
    puts "\n" + "=" * 60
    puts "üìñ –Ü–ù–°–¢–†–£–ö–¶–Ü–á –ó –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø"
    puts "=" * 60
    puts "\nüéØ –î–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:"
    puts "1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ SketchUp"
    puts "2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å: Window ‚Üí Extension Manager"
    puts "3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å: Install Extension"
    puts "4. –í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª: #{filename}"
    puts "5. –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è"
    puts "6. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å SketchUp"
    puts "\nüîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±:"
    puts "1. –†–æ–∑–ø–∞–∫—É–π—Ç–µ .rbz –∞—Ä—Ö—ñ–≤"
    puts "2. –°–∫–æ–ø—ñ—é–π—Ç–µ —Ñ–∞–π–ª–∏ –≤:"
    puts "   %APPDATA%\\SketchUp\\SketchUp 2024\\SketchUp\\Plugins\\"
    puts "\n‚ö†Ô∏è –í–ê–ñ–õ–ò–í–û:"
    puts "‚Ä¢ –ü–ª–∞–≥—ñ–Ω –ø–æ—Ç—Ä–µ–±—É—î —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è"
    puts "‚Ä¢ –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó"
    puts "‚Ä¢ –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è SketchUp: 2020"
    puts "\n" + "=" * 60
  end
end

# –ó–∞–ø—É—Å–∫ –∑–±—ñ—Ä–∫–∏
if __FILE__ == $0
  builder = PluginBuilder.new
  success = builder.build
  
  exit(success ? 0 : 1)
end

