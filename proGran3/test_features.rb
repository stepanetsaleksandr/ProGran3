# proGran3/test_features.rb
# –¢–µ—Å—Ç–æ–≤–∏–π –º–æ–¥—É–ª—å –¥–ª—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π ProGran3

require 'sketchup.rb'

module ProGran3
  module TestFeatures
    extend self

    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É
    TEST_BLOCK_NAME = "ProGran3_TestBlock"

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É
    def create_test_block
      model = Sketchup.active_model
      entities = model.active_entities
      
      # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ —è–∫—â–æ –≤—ñ–Ω —î
      remove_test_block
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫
      test_group = entities.add_group
      test_group.name = TEST_BLOCK_NAME
      
      # –î–æ–¥–∞—î–º–æ –±–∞–∑–æ–≤—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
      points = [
        Geom::Point3d.new(0, 0, 0),
        Geom::Point3d.new(1000.mm, 0, 0),
        Geom::Point3d.new(1000.mm, 1000.mm, 0),
        Geom::Point3d.new(0, 1000.mm, 0)
      ]
      
      face = test_group.entities.add_face(points)
      face.reverse! if face.normal.z < 0
      face.pushpull(50.mm)
      
      # –î–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
      add_info_text(test_group, "–¢–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ ProGran3", [500.mm, 500.mm, 100.mm])
      
      puts "‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ"
      test_group
    end

    # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É
    def remove_test_block
      model = Sketchup.active_model
      entities = model.active_entities
      
      test_groups = entities.grep(Sketchup::Group).select { |g| g.name == TEST_BLOCK_NAME }
      test_groups.each(&:erase!)
      
      puts "üóëÔ∏è –°—Ç–∞—Ä–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–æ" unless test_groups.empty?
    end

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    def add_info_text(group, text, position)
      text_entity = group.entities.add_text(text, position)
      text_entity.text = text
      text_entity
    end

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è 3D –ø—Ä–µ–≤—å—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    def generate_component_preview(component_path, preview_size = 200.mm)
      model = Sketchup.active_model
      entities = model.active_entities
      
      begin
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        defs = model.definitions
        comp_def = defs.load(component_path)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–µ–≤—å—é –≥—Ä—É–ø—É
        preview_group = entities.add_group
        preview_group.name = "Preview_#{File.basename(component_path, '.skp')}"
        
        # –†–æ–∑–º—ñ—â—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        instance = preview_group.entities.add_instance(comp_def, Geom::Transformation.new)
        
        # –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –¥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É
        bounds = instance.bounds
        scale_factor = preview_size / [bounds.width, bounds.height, bounds.depth].max
        scale_transform = Geom::Transformation.scaling(scale_factor)
        instance.transformation = scale_transform
        
        # –¶–µ–Ω—Ç—Ä—É—î–º–æ
        new_bounds = instance.bounds
        center_offset = Geom::Point3d.new(0, 0, 0) - new_bounds.center
        move_transform = Geom::Transformation.translation(center_offset)
        instance.transformation = move_transform * scale_transform
        
        puts "‚úÖ 3D –ø—Ä–µ–≤—å—é —Å—Ç–≤–æ—Ä–µ–Ω–æ: #{File.basename(component_path)}"
        preview_group
        
      rescue => e
        puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–µ–≤—å—é: #{e.message}"
        nil
      end
    end

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó –ø—Ä–µ–≤—å—é
    def create_preview_gallery(category = nil)
      model = Sketchup.active_model
      entities = model.active_entities
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
      test_block = find_test_block
      test_block = create_test_block unless test_block
      
      # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
      if category
        components = Dir.glob(File.join(ProGran3::ASSETS_PATH, category, "*.skp"))
      else
        components = Dir.glob(File.join(ProGran3::ASSETS_PATH, "**/*.skp"))
      end
      
      puts "üìÅ –ó–Ω–∞–π–¥–µ–Ω–æ #{components.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤"
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–∞–ª–µ—Ä–µ—é
      gallery_group = entities.add_group
      gallery_group.name = "Preview_Gallery"
      
      components.each_with_index do |component_path, index|
        # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –≤ —Å—ñ—Ç—Ü—ñ
        row = index / 3
        col = index % 3
        x = col * 300.mm
        y = row * 300.mm
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–µ–≤—å—é
        preview = generate_component_preview(component_path, 150.mm)
        if preview
          # –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ –≤ –≥–∞–ª–µ—Ä–µ—é
          preview.transformation = Geom::Transformation.translation([x, y, 0])
          preview.parent = gallery_group
          
          # –î–æ–¥–∞—î–º–æ –ø—ñ–¥–ø–∏—Å
          component_name = File.basename(component_path, '.skp')
          add_info_text(gallery_group, component_name, [x + 75.mm, y - 20.mm, 0])
        end
      end
      
      puts "üé® –ì–∞–ª–µ—Ä–µ—è –ø—Ä–µ–≤—å—é —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑ #{components.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤"
      gallery_group
    end

    # –ü–æ—à—É–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É
    def find_test_block
      model = Sketchup.active_model
      entities = model.active_entities
      
      entities.grep(Sketchup::Group).find { |g| g.name == TEST_BLOCK_NAME }
    end

    # –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π
    def test_all_features
      puts "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π ProGran3..."
      puts "=" * 50
      
      # –¢–µ—Å—Ç 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É
      puts "1. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫—É..."
      test_block = create_test_block
      puts "   ‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ"
      
      # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –æ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      puts "2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é..."
      sample_component = Dir.glob(File.join(ProGran3::ASSETS_PATH, "stands", "*.skp")).first
      if sample_component
        preview = generate_component_preview(sample_component)
        puts "   ‚úÖ –ü—Ä–µ–≤—å—é —Å—Ç–≤–æ—Ä–µ–Ω–æ: #{File.basename(sample_component)}"
      else
        puts "   ‚ö†Ô∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
      end
      
      # –¢–µ—Å—Ç 3: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó
      puts "3. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó..."
      gallery = create_preview_gallery("stands")
      puts "   ‚úÖ –ì–∞–ª–µ—Ä–µ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞"
      
      puts "=" * 50
      puts "üéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    end

    # –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –æ–±'—î–∫—Ç—ñ–≤
    def cleanup_test_objects
      model = Sketchup.active_model
      entities = model.active_entities
      
      # –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –±–ª–æ–∫
      remove_test_block
      
      # –í–∏–¥–∞–ª—è—î–º–æ –≥–∞–ª–µ—Ä–µ—ó –ø—Ä–µ–≤—å—é
      preview_groups = entities.grep(Sketchup::Group).select { |g| g.name.include?("Preview_") }
      preview_groups.each(&:erase!)
      
      puts "üßπ –¢–µ—Å—Ç–æ–≤—ñ –æ–±'—î–∫—Ç–∏ –æ—á–∏—â–µ–Ω–æ"
    end
  end
end

