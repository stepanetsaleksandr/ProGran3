// proGran3/web/src/modules/builders/FoundationBuilder.js
// –ú–æ–¥—É–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É –¥–ª—è ProGran3

import { Logger } from '../utils/Logger.js';
import { convertToMm } from '../utils/Units.js';

export class FoundationBuilder {
  constructor() {
    this.addedElements = window.addedElements || {};
  }

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É
  addFoundation() {
    Logger.debug('üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É...', 'info');
    
    try {
      // –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–∑–º—ñ—Ä–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É
      const depth = convertToMm(document.getElementById('foundation-depth').value);
      const width = convertToMm(document.getElementById('foundation-width').value);
      const height = convertToMm(document.getElementById('foundation-height').value);
      
      Logger.debug(`üìè –†–æ–∑–º—ñ—Ä–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É: ${depth}√ó${width}√ó${height} –º–º`, 'info');
      
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—ñ–≤
      if (!this.validateFoundationDimensions(depth, width, height)) {
        Logger.debug('‚ùå –ù–µ–≤—ñ—Ä–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É', 'error');
        return false;
      }
      
      // –í–∏–∫–ª–∏–∫ SketchUp API
      if (window.sketchup && window.sketchup.add_foundation) {
        window.sketchup.add_foundation(depth, width, height);
        this.addedElements.foundation = true;
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ø—ñ–¥—Å—É–º–∫–æ–≤—É —Ç–∞–±–ª–∏—Ü—é
        if (window.updateSummaryTable) {
          window.updateSummaryTable();
        }
        
        Logger.debug('‚úÖ –§—É–Ω–¥–∞–º–µ–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ', 'success');
        return true;
      } else {
        Logger.debug('‚ùå window.sketchup.add_foundation –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π', 'error');
        return false;
      }
      
    } catch (error) {
      Logger.debug(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É: ${error.message}`, 'error');
      return false;
    }
  }

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—ñ–≤ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É
  validateFoundationDimensions(depth, width, height) {
    // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ (–≤ –º–º)
    const minDimension = 100;  // 10 —Å–º
    const maxDimension = 10000; // 10 –º
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–≤–∂–∏–Ω–∏
    if (depth < minDimension || depth > maxDimension) {
      Logger.debug(`‚ùå –î–æ–≤–∂–∏–Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ ${minDimension} –¥–æ ${maxDimension} –º–º`, 'error');
      return false;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–∏—Ä–∏–Ω–∏
    if (width < minDimension || width > maxDimension) {
      Logger.debug(`‚ùå –®–∏—Ä–∏–Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ ${minDimension} –¥–æ ${maxDimension} –º–º`, 'error');
      return false;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏—Å–æ—Ç–∏
    if (height < 50 || height > 1000) {
      Logger.debug('‚ùå –í–∏—Å–æ—Ç–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ 50 –¥–æ 1000 –º–º', 'error');
      return false;
    }
    
    return true;
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö —Ä–æ–∑–º—ñ—Ä—ñ–≤ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É
  getFoundationDimensions() {
    const depth = document.getElementById('foundation-depth')?.value;
    const width = document.getElementById('foundation-width')?.value;
    const height = document.getElementById('foundation-height')?.value;
    
    return {
      depth: depth ? convertToMm(depth) : 0,
      width: width ? convertToMm(width) : 0,
      height: height ? convertToMm(height) : 0
    };
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π
  isFoundationAdded() {
    return this.addedElements.foundation === true;
  }

  // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É
  resetFoundation() {
    this.addedElements.foundation = false;
    Logger.debug('üîÑ –°—Ç–∞–Ω —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É —Å–∫–∏–Ω—É—Ç–æ', 'info');
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  getFoundationInfo() {
    if (!this.isFoundationAdded()) {
      return '--';
    }
    
    const dims = this.getFoundationDimensions();
    const unit = window.getCurrentUnit ? window.getCurrentUnit() : 'mm';
    const unitText = unit === 'mm' ? '–º–º' : '—Å–º';
    
    if (unit === 'cm') {
      return `${Math.round(dims.depth/10)}√ó${Math.round(dims.width/10)}√ó${Math.round(dims.height/10)} ${unitText}`;
    } else {
      return `${dims.depth}√ó${dims.width}√ó${dims.height} ${unitText}`;
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
const foundationBuilder = new FoundationBuilder();

// –ï–∫—Å–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export function addFoundation() {
  return foundationBuilder.addFoundation();
}

export function getFoundationDimensions() {
  return foundationBuilder.getFoundationDimensions();
}

export function isFoundationAdded() {
  return foundationBuilder.isFoundationAdded();
}

export function resetFoundation() {
  return foundationBuilder.resetFoundation();
}

export function getFoundationInfo() {
  return foundationBuilder.getFoundationInfo();
}
