// proGran3/web/src/modules/builders/BlindAreaBuilder.js
// –ú–æ–¥—É–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –¥–ª—è ProGran3

import { Logger } from '../utils/Logger.js';
import { convertToMm } from '../utils/Units.js';

export class BlindAreaBuilder {
  constructor() {
    this.addedElements = window.addedElements || {};
  }

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  addBlindArea() {
    Logger.debug('üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏...', 'info');
    
    try {
      const thickness = convertToMm(document.getElementById('blind-area-thickness').value);
      const mode = this.getSelectedBlindAreaMode();
      
      Logger.debug(`üìè –¢–æ–≤—â–∏–Ω–∞ –≤—ñ–¥–º–æ—Å—Ç–∫–∏: ${thickness} –º–º, —Ä–µ–∂–∏–º: ${mode}`, 'info');
      
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–æ–≤—â–∏–Ω–∏
      if (!this.validateBlindAreaThickness(thickness)) {
        Logger.debug('‚ùå –ù–µ–≤—ñ—Ä–Ω–∞ —Ç–æ–≤—â–∏–Ω–∞ –≤—ñ–¥–º–æ—Å—Ç–∫–∏', 'error');
        return false;
      }
      
      if (mode === 'uniform') {
        return this.addUniformBlindArea(thickness);
      } else {
        return this.addCustomBlindArea(thickness);
      }
      
    } catch (error) {
      Logger.debug(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏: ${error.message}`, 'error');
      return false;
    }
  }

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –∑ –æ–¥–Ω–∞–∫–æ–≤–æ—é —à–∏—Ä–∏–Ω–æ—é
  addUniformBlindArea(thickness) {
    const width = convertToMm(document.getElementById('blind-area-uniform-width').value);
    
    Logger.debug(`üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –∑ –æ–¥–Ω–∞–∫–æ–≤–æ—é —à–∏—Ä–∏–Ω–æ—é: ${width}–º–º, —Ç–æ–≤—â–∏–Ω–∞: ${thickness}–º–º`, 'info');
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —à–∏—Ä–∏–Ω–∏
    if (!this.validateBlindAreaWidth(width)) {
      return false;
    }
    
    if (window.sketchup && window.sketchup.add_blind_area_uniform) {
      window.sketchup.add_blind_area_uniform(width, thickness);
      this.addedElements.blindArea = true;
      
      if (window.updateSummaryTable) {
        window.updateSummaryTable();
      }
      
      Logger.debug('‚úÖ –í—ñ–¥–º–æ—Å—Ç–∫–∞ –∑ –æ–¥–Ω–∞–∫–æ–≤–æ—é —à–∏—Ä–∏–Ω–æ—é —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ', 'success');
      return true;
    } else {
      Logger.debug('‚ùå window.sketchup.add_blind_area_uniform –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π', 'error');
      return false;
    }
  }

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –∑ —Ä—ñ–∑–Ω–æ—é —à–∏—Ä–∏–Ω–æ—é
  addCustomBlindArea(thickness) {
    const north = convertToMm(document.getElementById('blind-area-north').value);
    const south = convertToMm(document.getElementById('blind-area-south').value);
    const east = convertToMm(document.getElementById('blind-area-east').value);
    const west = convertToMm(document.getElementById('blind-area-west').value);
    
    Logger.debug(`üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –∑ —Ä—ñ–∑–Ω–æ—é —à–∏—Ä–∏–Ω–æ—é: –ü:${north}–º–º, –ü–¥:${south}–º–º, –°:${east}–º–º, –ó:${west}–º–º, —Ç–æ–≤—â–∏–Ω–∞: ${thickness}–º–º`, 'info');
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω
    if (!this.validateBlindAreaWidth(north) || !this.validateBlindAreaWidth(south) || 
        !this.validateBlindAreaWidth(east) || !this.validateBlindAreaWidth(west)) {
      return false;
    }
    
    if (window.sketchup && window.sketchup.add_blind_area_custom) {
      window.sketchup.add_blind_area_custom(north, south, east, west, thickness);
      this.addedElements.blindArea = true;
      
      if (window.updateSummaryTable) {
        window.updateSummaryTable();
      }
      
      Logger.debug('‚úÖ –í—ñ–¥–º–æ—Å—Ç–∫–∞ –∑ —Ä—ñ–∑–Ω–æ—é —à–∏—Ä–∏–Ω–æ—é —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ', 'success');
      return true;
    } else {
      Logger.debug('‚ùå window.sketchup.add_blind_area_custom –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π', 'error');
      return false;
    }
  }

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–æ–≤—â–∏–Ω–∏ –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  validateBlindAreaThickness(thickness) {
    if (thickness < 30 || thickness > 200) {
      Logger.debug('‚ùå –¢–æ–≤—â–∏–Ω–∞ –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ 30 –¥–æ 200 –º–º', 'error');
      return false;
    }
    return true;
  }

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —à–∏—Ä–∏–Ω–∏ –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  validateBlindAreaWidth(width) {
    if (width < 50 || width > 1000) {
      Logger.debug('‚ùå –®–∏—Ä–∏–Ω–∞ –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ 50 –¥–æ 1000 –º–º', 'error');
      return false;
    }
    return true;
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  getSelectedBlindAreaMode() {
    const activeButton = document.querySelector('.button-group-tiling-mode .tiling-mode-btn.active');
    return activeButton ? activeButton.dataset.value : 'uniform';
  }

  // –í–∏–±—ñ—Ä —Ä–µ–∂–∏–º—É –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  selectBlindAreaMode(button) {
    Logger.debug(`üîÑ –ó–º—ñ–Ω–∞ —Ä–µ–∂–∏–º—É –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –Ω–∞: ${button.dataset.value}`, 'info');
    
    // –í–∏–¥–∞–ª—è—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ —Ä–µ–∂–∏–º—É —à–∏—Ä–∏–Ω–∏
    document.querySelectorAll('.button-group-tiling-mode .tiling-mode-btn').forEach(btn => {
      btn.classList.remove('active');
    });
    
    // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ—ó –∫–Ω–æ–ø–∫–∏
    button.classList.add('active');
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏
    this.updateBlindAreaControls();
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª—ñ–≤ –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  updateBlindAreaControls() {
    const mode = this.getSelectedBlindAreaMode();
    const uniformControls = document.getElementById('uniform-controls');
    const customControls = document.getElementById('custom-controls');
    
    if (mode === 'uniform') {
      uniformControls.classList.remove('hidden');
      customControls.classList.add('hidden');
    } else {
      uniformControls.classList.add('hidden');
      customControls.classList.remove('hidden');
    }
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—Å—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    if (window.updateAllDisplays) {
      window.updateAllDisplays();
    }
    
    Logger.debug(`‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–∏ –≤—ñ–¥–º–æ—Å—Ç–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Ä–µ–∂–∏–º—É: ${mode}`, 'success');
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤—ñ–¥–º–æ—Å—Ç–∫–∞ –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞
  isBlindAreaAdded() {
    return this.addedElements.blindArea === true;
  }

  // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –≤—ñ–¥–º–æ—Å—Ç–∫–∏
  resetBlindArea() {
    this.addedElements.blindArea = false;
    Logger.debug('üîÑ –°—Ç–∞–Ω –≤—ñ–¥–º–æ—Å—Ç–∫–∏ —Å–∫–∏–Ω—É—Ç–æ', 'info');
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤—ñ–¥–º–æ—Å—Ç–∫—É –¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  getBlindAreaInfo() {
    if (!this.isBlindAreaAdded()) {
      return '--';
    }
    
    const thickness = convertToMm(document.getElementById('blind-area-thickness').value);
    const mode = this.getSelectedBlindAreaMode();
    const unit = window.getCurrentUnit ? window.getCurrentUnit() : 'mm';
    const unitText = unit === 'mm' ? '–º–º' : '—Å–º';
    
    if (mode === 'uniform') {
      const width = convertToMm(document.getElementById('blind-area-uniform-width').value);
      if (unit === 'cm') {
        return `–®–∏—Ä–∏–Ω–∞: ${Math.round(width/10)} ${unitText}, –¢–æ–≤—â–∏–Ω–∞: ${Math.round(thickness/10)} ${unitText}`;
      } else {
        return `–®–∏—Ä–∏–Ω–∞: ${width} ${unitText}, –¢–æ–≤—â–∏–Ω–∞: ${thickness} ${unitText}`;
      }
    } else {
      const north = convertToMm(document.getElementById('blind-area-north').value);
      const south = convertToMm(document.getElementById('blind-area-south').value);
      const east = convertToMm(document.getElementById('blind-area-east').value);
      const west = convertToMm(document.getElementById('blind-area-west').value);
      
      if (unit === 'cm') {
        return `–ü:${Math.round(north/10)} –ü–¥:${Math.round(south/10)} –°:${Math.round(east/10)} –ó:${Math.round(west/10)} ${unitText}, –¢:${Math.round(thickness/10)} ${unitText}`;
      } else {
        return `–ü:${north} –ü–¥:${south} –°:${east} –ó:${west} ${unitText}, –¢:${thickness} ${unitText}`;
      }
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
const blindAreaBuilder = new BlindAreaBuilder();

// –ï–∫—Å–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export function addBlindArea() {
  return blindAreaBuilder.addBlindArea();
}

export function selectBlindAreaMode(button) {
  return blindAreaBuilder.selectBlindAreaMode(button);
}

export function getSelectedBlindAreaMode() {
  return blindAreaBuilder.getSelectedBlindAreaMode();
}

export function updateBlindAreaControls() {
  return blindAreaBuilder.updateBlindAreaControls();
}

export function isBlindAreaAdded() {
  return blindAreaBuilder.isBlindAreaAdded();
}

export function resetBlindArea() {
  return blindAreaBuilder.resetBlindArea();
}

export function getBlindAreaInfo() {
  return blindAreaBuilder.getBlindAreaInfo();
}
