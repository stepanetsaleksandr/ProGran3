// proGran3/web/src/modules/utils/Logger.js
// –ú–æ–¥—É–ª—å –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è ProGran3

export class Logger {
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ debug –ª–æ–≥
  static debug(message, type = 'info') {
    const debugLog = document.getElementById('debug-log');
    if (!debugLog) return;
    
    const timestamp = new Date().toLocaleTimeString();
    const color = type === 'error' ? '#ff6b6b' : type === 'success' ? '#51cf66' : type === 'warning' ? '#ffd43b' : '#339af0';
    
    const logEntry = document.createElement('div');
    logEntry.style.color = color;
    logEntry.style.marginBottom = '2px';
    logEntry.innerHTML = `<span style="color: #868e96;">[${timestamp}]</span> ${message}`;
    
    debugLog.appendChild(logEntry);
    debugLog.scrollTop = debugLog.scrollHeight;
    
    // –û–±–º–µ–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤
    while (debugLog.children.length > 50) {
      debugLog.removeChild(debugLog.firstChild);
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è debug –ª–æ–≥—É
  static clear() {
    const debugLog = document.getElementById('debug-log');
    if (debugLog) {
      debugLog.innerHTML = '<div>üîç –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤...</div>';
    }
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export function debugLog(message, type = 'info') {
  Logger.debug(message, type);
}

export function clearDebugLog() {
  Logger.clear();
}
