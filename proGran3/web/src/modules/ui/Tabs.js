// proGran3/web/src/modules/ui/Tabs.js
// –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–∞–±–∞–º–∏ –¥–ª—è ProGran3

import { Logger } from '../utils/Logger.js';

export class TabsManager {
  constructor() {
    this.activeTab = 'base';
  }

  // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞–±—ñ–≤
  switchTab(tabName) {
    Logger.debug(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ —Ç–∞–±: ${tabName}`, 'info');
    
    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤—Å—ñ —Ç–∞–±–∏
    const tabContents = document.querySelectorAll('.tab-content');
    tabContents.forEach(tab => {
      tab.classList.remove('active');
    });
    
    // –í–∏–¥–∞–ª—è—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ —Ç–∞–±—ñ–≤
    const tabButtons = document.querySelectorAll('.tab-button');
    tabButtons.forEach(button => {
      button.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π —Ç–∞–±
    const selectedTab = document.getElementById(tabName + '-tab');
    if (selectedTab) {
      selectedTab.classList.add('active');
    }
    
    // –ê–∫—Ç–∏–≤—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–Ω–æ–ø–∫—É
    const selectedButton = document.querySelector(`[data-tab="${tabName}"]`);
    if (selectedButton) {
      selectedButton.classList.add('active');
    }
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–±
    this.activeTab = tabName;
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–∞—Ä—É—Å–µ–ª—ñ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—ñ
    setTimeout(() => {
      this.updateCarouselsInActiveTab();
    }, 100);
    
    Logger.debug(`‚úÖ –¢–∞–± –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: ${tabName}`, 'success');
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞—Ä—É—Å–µ–ª–µ–π –≤ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—ñ
  updateCarouselsInActiveTab() {
    const activeTabContent = document.querySelector('.tab-content.active');
    if (activeTabContent) {
      // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–∞—Ä—É—Å–µ–ª—ñ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—ñ
      const carousels = activeTabContent.querySelectorAll('.carousel-container');
      carousels.forEach(carousel => {
        // –¢—Ä–∏–≥–µ—Ä–∏–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞—Ä—É—Å–µ–ª—ñ
        const viewport = carousel.querySelector('.carousel-viewport');
        if (viewport) {
          viewport.style.display = 'none';
          setTimeout(() => {
            viewport.style.display = 'block';
          }, 10);
        }
      });
    }
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–±—ñ–≤
  initialize() {
    Logger.debug(`üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–±—ñ–≤`, 'info');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ç–∞–±—ñ–≤
    const tabsNavigation = document.querySelector('.tabs-navigation');
    if (!tabsNavigation) {
      Logger.debug(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç–∞–±—ñ–≤`, 'error');
      return;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç—É —Ç–∞–±—ñ–≤
    const tabContents = document.querySelectorAll('.tab-content');
    if (tabContents.length === 0) {
      Logger.debug(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±—ñ–≤`, 'error');
      return;
    }
    
    Logger.debug(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${tabContents.length} —Ç–∞–±—ñ–≤`, 'success');
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–± –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    this.switchTab('base');
    
    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ç–∞–±—ñ–≤
    const tabButtons = document.querySelectorAll('.tab-button');
    tabButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const tabName = this.getAttribute('data-tab');
        if (tabName) {
          Logger.debug(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ —Ç–∞–±: ${tabName}`, 'info');
          this.switchTab(tabName);
        }
      }.bind(this));
    });
    
    Logger.debug(`‚úÖ –¢–∞–±–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ`, 'success');
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
  getActiveTab() {
    return this.activeTab;
  }

  // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
  setActiveTab(tabName) {
    this.switchTab(tabName);
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
const tabsManager = new TabsManager();

// –ï–∫—Å–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export function switchTab(tabName) {
  tabsManager.switchTab(tabName);
}

export function updateCarouselsInActiveTab() {
  tabsManager.updateCarouselsInActiveTab();
}

export function initializeTabs() {
  tabsManager.initialize();
}
