// proGran3/web/src/modules/ui/Panels.js
// –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–∞–Ω–µ–ª—è–º–∏ –¥–ª—è ProGran3

import { Logger } from '../utils/Logger.js';

export class PanelsManager {
  constructor() {
    this.initializeFloatingLabels();
  }

  // –õ–æ–≥—ñ–∫–∞ –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/—Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –ø–∞–Ω–µ–ª–µ–π
  togglePanel(headerElement) {
    const panel = headerElement.closest('.panel');
    if (panel) {
      Logger.debug('Toggle panel:', panel);
      panel.classList.toggle('collapsed');
      Logger.debug('Panel collapsed:', panel.classList.contains('collapsed'));
    } else {
      Logger.debug('Panel not found for element:', headerElement, 'error');
    }
  }

  // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ
  advanceToNextPanel(buttonElement) {
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫—É –ø–∞–Ω–µ–ª—å –∫–Ω–æ–ø–∫–∏
    const currentPanel = buttonElement.closest('.panel');
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –ø–∞–Ω–µ–ª—ñ –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—ñ
    const activeTabContent = document.querySelector('.tab-content.active');
    if (!activeTabContent) {
      Logger.debug(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–± –¥–ª—è advanceToNextPanel`, 'error');
      return;
    }
    
    const allPanelsInTab = Array.from(activeTabContent.querySelectorAll('.panel'));
    const currentIndex = allPanelsInTab.indexOf(currentPanel);
    const nextPanel = allPanelsInTab[currentIndex + 1];

    // –ó–≥–æ—Ä—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –ø–∞–Ω–µ–ª—å
    if (currentPanel && !currentPanel.classList.contains('collapsed')) {
      currentPanel.classList.add('collapsed');
    }

    // –†–æ–∑–≥–æ—Ä—Ç–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î —ñ —î –∑–≥–æ—Ä–Ω—É—Ç–æ—é
    if (nextPanel && nextPanel.classList.contains('collapsed')) {
      nextPanel.classList.remove('collapsed');
    }
    
    Logger.debug(`üîÑ advanceToNextPanel: –ø–æ—Ç–æ—á–Ω–∞ –ø–∞–Ω–µ–ª—å ${currentIndex + 1}/${allPanelsInTab.length}`, 'info');
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è floating labels
  initializeFloatingLabels() {
    const floatingInputs = document.querySelectorAll('.floating-label input');
    const floatingSelects = document.querySelectorAll('.floating-label select');
    
    // –û–±—Ä–æ–±–∫–∞ input –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    floatingInputs.forEach(input => {
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ–ª—ñ–≤ –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
      if (input.value && input.value.trim() !== '') {
        input.classList.add('has-value');
      }
      
      // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
      input.addEventListener('focus', function() {
        this.parentElement.classList.add('focused');
      });
      
      input.addEventListener('blur', function() {
        this.parentElement.classList.remove('focused');
        if (this.value && this.value.trim() !== '') {
          this.classList.add('has-value');
        } else {
          this.classList.remove('has-value');
        }
      });
      
      input.addEventListener('input', function() {
        if (this.value && this.value.trim() !== '') {
          this.classList.add('has-value');
        } else {
          this.classList.remove('has-value');
        }
      });
    });
    
    // –û–±—Ä–æ–±–∫–∞ select –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    floatingSelects.forEach(select => {
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ–ª—ñ–≤ –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
      if (select.value && select.value.trim() !== '') {
        select.classList.add('has-value');
      }
      
      // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
      select.addEventListener('focus', function() {
        this.parentElement.classList.add('focused');
      });
      
      select.addEventListener('blur', function() {
        this.parentElement.classList.remove('focused');
        if (this.value && this.value.trim() !== '') {
          this.classList.add('has-value');
        } else {
          this.classList.remove('has-value');
        }
      });
      
      select.addEventListener('change', function() {
        if (this.value && this.value.trim() !== '') {
          this.classList.add('has-value');
        } else {
          this.classList.remove('has-value');
        }
      });
    });
  }

  // –ó–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–∞–Ω–µ–ª–µ–π –≤ —Ç–∞–±—ñ, –∫—Ä—ñ–º –ø–µ—Ä—à–æ—ó
  collapseAllPanelsExceptFirst() {
    const tabContents = document.querySelectorAll('.tab-content');
    Logger.debug(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${tabContents.length} —Ç–∞–±—ñ–≤`, 'info');
    
    tabContents.forEach(tabContent => {
      const panels = tabContent.querySelectorAll('.panel');
      Logger.debug(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${panels.length} –ø–∞–Ω–µ–ª–µ–π –≤ —Ç–∞–±—ñ ${tabContent.id}`, 'info');
      
      panels.forEach((panel, index) => {
        if (index > 0) {
          panel.classList.add('collapsed');
        }
      });
    });
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–∞–Ω–µ–ª–µ–π –≤ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–∞–±—ñ
  getPanelsInActiveTab() {
    const activeTabContent = document.querySelector('.tab-content.active');
    if (!activeTabContent) return [];
    
    return Array.from(activeTabContent.querySelectorAll('.panel'));
  }

  // –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ
  expandPanel(panelId) {
    const panel = document.getElementById(panelId);
    if (panel) {
      panel.classList.remove('collapsed');
      Logger.debug(`‚úÖ –†–æ–∑–≥–æ—Ä–Ω—É—Ç–æ –ø–∞–Ω–µ–ª—å: ${panelId}`, 'success');
    } else {
      Logger.debug(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–∞–Ω–µ–ª—å: ${panelId}`, 'error');
    }
  }

  // –ó–≥–æ—Ä—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ
  collapsePanel(panelId) {
    const panel = document.getElementById(panelId);
    if (panel) {
      panel.classList.add('collapsed');
      Logger.debug(`‚úÖ –ó–≥–æ—Ä–Ω—É—Ç–æ –ø–∞–Ω–µ–ª—å: ${panelId}`, 'success');
    } else {
      Logger.debug(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–∞–Ω–µ–ª—å: ${panelId}`, 'error');
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
const panelsManager = new PanelsManager();

// –ï–∫—Å–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export function togglePanel(headerElement) {
  panelsManager.togglePanel(headerElement);
}

export function advanceToNextPanel(buttonElement) {
  panelsManager.advanceToNextPanel(buttonElement);
}

export function initializeFloatingLabels() {
  panelsManager.initializeFloatingLabels();
}
