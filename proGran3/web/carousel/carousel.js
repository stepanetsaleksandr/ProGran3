// proGran3/web/carousel/carousel.js
// –ù–µ–∑–∞–ª–µ–∂–Ω–∏–π JavaScript –º–æ–¥—É–ª—å –∫–∞—Ä—É—Å–µ–ª—ñ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º

class CarouselModule {
  constructor(carouselId, config = {}) {
    this.carouselId = carouselId;
    this.config = {
      hasPreview: true,
      previewMode: 'dynamic',
      massGeneration: false,
      design: 'white_gradient',
      ...config
    };
    
    this.currentIndex = 0;
    this.models = [];
    this.items = [];
    this.isInitialized = false;
    
    console.log(`üé® –°—Ç–≤–æ—Ä–µ–Ω–æ –º–æ–¥—É–ª—å –∫–∞—Ä—É—Å–µ–ª—ñ: ${carouselId}`);
  }
  
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ä—É—Å–µ–ª—ñ
  initialize(modelList) {
    this.models = modelList || [];
    this.currentIndex = 0;
    
    console.log(`üé® –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ä—É—Å–µ–ª—ñ ${this.carouselId}:`, this.models);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –∫–∞—Ä—É—Å–µ–ª—ñ
    this.createCarouselItems();
    
    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø–æ–¥—ñ—ó
    this.setupEvents();
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç
    this.showCurrentItem();
    
    this.isInitialized = true;
    
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ callback —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    if (window.sketchup) {
      window.sketchup.initialize_carousel_module(this.carouselId, JSON.stringify(this.models));
    }
    
    console.log(`‚úÖ –ö–∞—Ä—É—Å–µ–ª—å ${this.carouselId} —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞`);
  }
  
  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–∞—Ä—É—Å–µ–ª—ñ
  createCarouselItems() {
    const track = document.getElementById(`${this.carouselId}-track`);
    if (!track) return;
    
    track.innerHTML = '';
    this.items = [];
    
    this.models.forEach((model, index) => {
      const item = this.createCarouselItem(model, index);
      track.appendChild(item);
      this.items.push(item);
    });
  }
  
  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–¥–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∫–∞—Ä—É—Å–µ–ª—ñ
  createCarouselItem(model, index) {
    const item = document.createElement('div');
    item.className = 'carousel-module-item';
    item.dataset.index = index;
    item.dataset.model = model;
    item.dataset.status = 'idle';
    
    // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –¥–∏–∑–∞–π–Ω –∑ –±—ñ–ª–∏–º —Ñ–æ–Ω–æ–º —Ç–∞ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º
    item.innerHTML = `
      <div class="carousel-module-item-content">
        <div class="carousel-module-item-preview">
          <div class="carousel-module-loading">
            <div class="carousel-module-loading-text">–ì–æ—Ç–æ–≤–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</div>
          </div>
        </div>
        <div class="carousel-module-item-info">
          <div class="carousel-module-item-name">${model.replace('.skp', '')}</div>
          <div class="carousel-module-item-index">${index + 1} / ${this.models.length}</div>
        </div>
      </div>
    `;
    
    return item;
  }
  
  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
  setupEvents() {
    const viewport = document.getElementById(`${this.carouselId}-viewport`);
    if (!viewport) return;
    
    // –ü–æ–¥—ñ—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫–æ–ª–µ—Å–∞ –º–∏—à—ñ
    viewport.addEventListener('wheel', (event) => {
      event.preventDefault();
      const direction = event.deltaY > 0 ? 1 : -1;
      this.navigate(direction);
    });
    
    // –ü–æ–¥—ñ—ó –∫–Ω–æ–ø–æ–∫
    this.setupButtonEvents();
  }
  
  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –∫–Ω–æ–ø–æ–∫
  setupButtonEvents() {
    // –ö–Ω–æ–ø–∫–∞ "–ü–æ–ø–µ—Ä–µ–¥–Ω—è"
    const prevBtn = document.querySelector(`#${this.carouselId}-module .carousel-module-btn.prev`);
    if (prevBtn) {
      prevBtn.addEventListener('click', () => this.previous());
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–∞"
    const nextBtn = document.querySelector(`#${this.carouselId}-module .carousel-module-btn.next`);
    if (nextBtn) {
      nextBtn.addEventListener('click', () => this.next());
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—å—é"
    const generateBtn = document.querySelector(`#${this.carouselId}-module .carousel-module-btn.generate`);
    if (generateBtn) {
      generateBtn.addEventListener('click', () => this.generatePreview());
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –º–æ–¥–µ–ª—å"
    const addBtn = document.querySelector(`#${this.carouselId}-module .carousel-module-btn.add`);
    if (addBtn) {
      addBtn.addEventListener('click', () => this.addCurrentModel());
    }
  }
  
  // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
  navigate(direction) {
    const newIndex = this.currentIndex + direction;
    
    if (newIndex >= 0 && newIndex < this.models.length) {
      this.currentIndex = newIndex;
      this.showCurrentItem();
      
      // –í–∏–∫–ª–∏–∫–∞—î–º–æ callback –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
      if (window.sketchup) {
        if (direction > 0) {
          window.sketchup.carousel_next(this.carouselId);
        } else {
          window.sketchup.carousel_previous(this.carouselId);
        }
      }
    }
  }
  
  // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –º–æ–¥–µ–ª—ñ
  next() {
    this.navigate(1);
  }
  
  // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó –º–æ–¥–µ–ª—ñ
  previous() {
    this.navigate(-1);
  }
  
  // –ü–æ–∫–∞–∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
  showCurrentItem() {
    this.items.forEach((item, index) => {
      item.classList.toggle('active', index === this.currentIndex);
    });
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
    this.updateInfo();
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–µ–≤—å—é –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
    this.loadPreviewForCurrent();
  }
  
  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
  updateInfo() {
    const infoElement = document.getElementById(`${this.carouselId}-info`);
    if (!infoElement) return;
    
    const currentModel = this.models[this.currentIndex];
    const modelName = currentModel ? currentModel.replace('.skp', '') : '--';
    
    infoElement.innerHTML = `
      <span class="current-model">${modelName}</span>
      <span class="model-counter">${this.currentIndex + 1} / ${this.models.length}</span>
    `;
  }
  
  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–≤—å—é –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
  loadPreviewForCurrent() {
    const currentItem = this.items[this.currentIndex];
    if (!currentItem) return;
    
    const status = currentItem.dataset.status;
    if (status === 'loaded' || status === 'pending') return;
    
    currentItem.dataset.status = 'pending';
    
    const loadingElement = currentItem.querySelector('.carousel-module-loading-text');
    if (loadingElement) {
      loadingElement.textContent = '–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é...';
    }
    
    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–µ–≤—å—é —á–µ—Ä–µ–∑ Ruby
    if (window.sketchup) {
      window.sketchup.carousel_generate_preview(this.carouselId);
    }
  }
  
  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é
  generatePreview() {
    console.log(`üé® –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –¥–ª—è –∫–∞—Ä—É—Å–µ–ª—ñ: ${this.carouselId}`);
    
    if (window.sketchup) {
      window.sketchup.carousel_generate_preview(this.carouselId);
    }
  }
  
  // –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–¥–µ–ª—ñ
  addCurrentModel() {
    console.log(`‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ: ${this.models[this.currentIndex]}`);
    
    if (window.sketchup) {
      window.sketchup.carousel_add_model(this.carouselId);
    }
  }
  
  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–∞—Ä—É—Å–µ–ª—å
  getInfo() {
    if (window.sketchup) {
      window.sketchup.carousel_get_info(this.carouselId);
    }
  }
  
  // –û–±—Ä–æ–±–∫–∞ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é
  handlePreviewGenerated(base64Data) {
    const currentItem = this.items[this.currentIndex];
    if (!currentItem) return;
    
    const previewElement = currentItem.querySelector('.carousel-module-item-preview');
    if (!previewElement) return;
    
    // –í–∏–¥–∞–ª—è—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const loadingElement = currentItem.querySelector('.carousel-module-loading');
    if (loadingElement) {
      loadingElement.remove();
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    const img = document.createElement('img');
    img.src = base64Data;
    img.alt = this.models[this.currentIndex];
    img.className = 'carousel-module-preview-image';
    
    previewElement.appendChild(img);
    currentItem.dataset.status = 'loaded';
    
    console.log(`‚úÖ –ü—Ä–µ–≤—å—é –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –¥–ª—è: ${this.models[this.currentIndex]}`);
  }
  
  // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é
  handlePreviewError(errorMessage) {
    const currentItem = this.items[this.currentIndex];
    if (!currentItem) return;
    
    const loadingElement = currentItem.querySelector('.carousel-module-loading-text');
    if (loadingElement) {
      loadingElement.textContent = '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó';
      loadingElement.style.color = '#ff6b6b';
    }
    
    currentItem.dataset.status = 'error';
    
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é: ${errorMessage}`);
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∑ Ruby
window.carouselModuleInitialized = function(carouselId, info) {
  console.log(`‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞:`, info);
};

window.carouselNavigated = function(carouselId, info) {
  console.log(`‚û°Ô∏è –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∫–∞—Ä—É—Å–µ–ª—ñ:`, info);
};

window.carouselPreviewGenerated = function(carouselId, base64Data) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.handlePreviewGenerated(base64Data);
  }
};

window.carouselPreviewError = function(carouselId, errorMessage) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.handlePreviewError(errorMessage);
  }
};

window.carouselModelAdded = function(carouselId, info) {
  console.log(`‚ûï –ú–æ–¥–µ–ª—å –¥–æ–¥–∞–Ω–∞:`, info);
};

window.carouselInfoReceived = function(carouselId, info) {
  console.log(`üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–∞—Ä—É—Å–µ–ª—å:`, info);
};

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–Ω–æ–ø–æ–∫
window.carouselModuleNext = function(carouselId) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.next();
  }
};

window.carouselModulePrevious = function(carouselId) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.previous();
  }
};

window.carouselModuleGeneratePreview = function(carouselId) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.generatePreview();
  }
};

window.carouselModuleAddModel = function(carouselId) {
  const carousel = window.carouselModules && window.carouselModules[carouselId];
  if (carousel) {
    carousel.addCurrentModel();
  }
};

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ä–µ—î—Å—Ç—Ä—É –∫–∞—Ä—É—Å–µ–ª–µ–π
window.carouselModules = {};

console.log('üé® –ú–æ–¥—É–ª—å –∫–∞—Ä—É—Å–µ–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
