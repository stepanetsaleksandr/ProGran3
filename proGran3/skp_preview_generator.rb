# proGran3/skp_preview_generator.rb
# –ú–æ–¥—É–ª—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–µ–≤—å—é –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –∑ .skp —Ñ–∞–π–ª—ñ–≤
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î API SketchUp 2024 –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏

require 'sketchup.rb'

module ProGran3
  module SkpPreviewGenerator
    extend self

    # –®–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –∑ –ø—Ä–µ–≤—å—é
    PREVIEW_PATH = File.join(File.dirname(__FILE__), 'previews')
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –≥–µ–æ–º–µ—Ç—Ä—ñ—ó
    ORIGIN = Geom::Point3d.new(0, 0, 0)
    X_AXIS = Geom::Vector3d.new(1, 0, 0)
    Y_AXIS = Geom::Vector3d.new(0, 1, 0)
    Z_AXIS = Geom::Vector3d.new(0, 0, 1)

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏ –¥–ª—è –ø—Ä–µ–≤—å—é
    def ensure_preview_directory
      Dir.mkdir(PREVIEW_PATH) unless Dir.exist?(PREVIEW_PATH)
    end

    # –û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—É
    def generate_preview_from_skp(skp_file_path, size = 256)
      ensure_preview_directory
      
      begin
        puts "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—É: #{File.basename(skp_file_path)}"
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª
        unless File.exist?(skp_file_path)
          puts "‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: #{skp_file_path}"
          return nil
        end

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –º–æ–¥–µ–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏
        temp_model = create_temp_model_from_skp(skp_file_path)
        return nil unless temp_model

        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–∞–º–µ—Ä—É –¥–ª—è –ø—Ä–µ–≤—å—é
        setup_preview_camera_for_model(temp_model)
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        image_path = get_preview_image_path(skp_file_path)
        success = export_preview_image_from_model(temp_model, image_path, size)
        
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –º–æ–¥–µ–ª—å
        close_temp_model(temp_model)
        
        if success
          puts "‚úÖ –ü—Ä–µ–≤—å—é —Å—Ç–≤–æ—Ä–µ–Ω–æ: #{File.basename(image_path)}"
          image_path
        else
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–µ–≤—å—é"
          nil
        end
        
      rescue => e
        puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é –∑ .skp: #{e.message}"
        puts "   –§–∞–π–ª: #{skp_file_path}"
        nil
      end
    end

    # –†–æ–±–æ—Ç–∞ –∑ .skp —Ñ–∞–π–ª–æ–º –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –º–æ–¥–µ–ª—ñ
    def create_temp_model_from_skp(skp_file_path)
      begin
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–¥–µ–ª—å
        model = Sketchup.active_model
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .skp —Ñ–∞–π–ª —è–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        full_path = File.expand_path(skp_file_path)
        puts "üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É: #{full_path}"
        
        # –°–ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —è–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        begin
          comp_def = model.definitions.load(full_path)
          puts "‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: #{comp_def.name}"
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
          @temp_instance = model.active_entities.add_instance(comp_def, Geom::Transformation.new)
          puts "‚úÖ –¢–∏–º—á–∞—Å–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ"
          
          return model
          
        rescue => e
          puts "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —è–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: #{e.message}"
          return nil
        end
        
      rescue => e
        puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–±–æ—Ç–∏ –∑ .skp —Ñ–∞–π–ª–æ–º: #{e.message}"
        nil
      end
    end

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–∏ –¥–ª—è –ø—Ä–µ–≤—å—é –º–æ–¥–µ–ª—ñ
    def setup_preview_camera_for_model(model)
      begin
        view = model.active_view
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –æ–±'—î–∫—Ç–∏ –≤ –º–æ–¥–µ–ª—ñ
        entities = model.active_entities
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–±–æ –≥—Ä—É–ø—É
        target_entity = find_main_entity(entities)
        
        if target_entity
          # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–∞–º–µ—Ä—É –Ω–∞ –æ–±'—î–∫—Ç
          setup_camera_on_entity(view, target_entity)
        else
          # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É —ñ–∑–æ–º–µ—Ç—Ä–∏—á–Ω—É –∫–∞–º–µ—Ä—É
          setup_default_isometric_camera(view)
        end
        
        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω
        setup_transparent_background(model, view)
        
        puts "üìê –ö–∞–º–µ—Ä–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –¥–ª—è –ø—Ä–µ–≤—å—é"
        
      rescue => e
        puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–∏: #{e.message}"
      end
    end

    # –ü–æ—à—É–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞ –≤ –º–æ–¥–µ–ª—ñ
    def find_main_entity(entities)
      # –Ø–∫—â–æ —î —Ç–∏–º—á–∞—Å–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
      if @temp_instance && @temp_instance.valid?
        return @temp_instance
      end
      
      # –°–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
      entities.each do |entity|
        if entity.is_a?(Sketchup::ComponentInstance)
          return entity
        elsif entity.is_a?(Sketchup::Group)
          return entity
        end
      end
      
      # –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏, —à—É–∫–∞—î–º–æ –≤ –ø—ñ–¥–æ–±'—î–∫—Ç–∞—Ö
      entities.each do |entity|
        if entity.respond_to?(:entities)
          sub_entity = find_main_entity(entity.entities)
          return sub_entity if sub_entity
        end
      end
      
      nil
    end

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –æ–±'—î–∫—Ç
    def setup_camera_on_entity(view, entity)
      begin
        # –û—Ç—Ä–∏–º—É—î–º–æ –º–µ–∂—ñ –æ–±'—î–∫—Ç–∞
        bounds = entity.bounds
        center = bounds.center
        
        # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤—ñ–¥—Å—Ç–∞–Ω—å –¥–æ –∫–∞–º–µ—Ä–∏
        diagonal = bounds.diagonal
        distance = diagonal * 2.5
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–∑–æ–º–µ—Ç—Ä–∏—á–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫–∞–º–µ—Ä–∏
        angle_x_rad = 35.264 * Math::PI / 180  # –ù–∞—Ö–∏–ª 35.264¬∞
        angle_y_rad = 45 * Math::PI / 180      # –û–±–µ—Ä—Ç–∞–Ω–Ω—è 45¬∞
        
        # –ë–∞–∑–æ–≤–∏–π –≤–µ–∫—Ç–æ—Ä –∫–∞–º–µ—Ä–∏
        base_eye = Geom::Vector3d.new(distance, distance, distance)
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–µ–∫—Ç–æ—Ä –¥–ª—è —ñ–∑–æ–º–µ—Ç—Ä—ñ—ó
        rotation_y = Geom::Transformation.rotation(ORIGIN, Y_AXIS, angle_y_rad)
        eye_after_y = rotation_y * base_eye
        
        rotation_x = Geom::Transformation.rotation(ORIGIN, X_AXIS, angle_x_rad)
        rotated_eye = rotation_x * eye_after_y
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∫–∞–º–µ—Ä–∏
        eye = center + rotated_eye
        target = center
        up = Geom::Vector3d.new(0, 0, 1)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞–º–µ—Ä—É
        camera = Sketchup::Camera.new(eye, target, up)
        view.camera = camera
        
        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ zoom
        view.zoom(entity)
        
        puts "üìê –ö–∞–º–µ—Ä–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –Ω–∞ –æ–±'—î–∫—Ç"
        
      rescue => e
        puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–∏ –Ω–∞ –æ–±'—î–∫—Ç: #{e.message}"
        setup_default_isometric_camera(view)
      end
    end

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó —ñ–∑–æ–º–µ—Ç—Ä–∏—á–Ω–æ—ó –∫–∞–º–µ—Ä–∏
    def setup_default_isometric_camera(view)
      begin
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —ñ–∑–æ–º–µ—Ç—Ä–∏—á–Ω–∞ –∫–∞–º–µ—Ä–∞
        eye = Geom::Point3d.new(100, 100, 100)
        target = Geom::Point3d.new(0, 0, 0)
        up = Geom::Vector3d.new(0, 0, 1)
        
        camera = Sketchup::Camera.new(eye, target, up)
        view.camera = camera
        
        puts "üìê –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É —ñ–∑–æ–º–µ—Ç—Ä–∏—á–Ω—É –∫–∞–º–µ—Ä—É"
        
      rescue => e
        puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó –∫–∞–º–µ—Ä–∏: #{e.message}"
      end
    end

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–∑–æ—Ä–æ–≥–æ —Ñ–æ–Ω—É
    def setup_transparent_background(model, view)
      begin
        rendering_options = model.rendering_options
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ
        rendering_options["DrawHorizon"] = false if rendering_options.keys.include?("DrawHorizon")
        rendering_options["DrawGround"] = false if rendering_options.keys.include?("DrawGround")
        rendering_options["DrawSky"] = false if rendering_options.keys.include?("DrawSky")
        rendering_options["BackgroundColor"] = [255, 255, 255, 0] if rendering_options.keys.include?("BackgroundColor")
        
        puts "üé® –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω"
        
      rescue => e
        puts "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ñ–æ–Ω: #{e.message}"
      end
    end

    # –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–µ–≤—å—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –º–æ–¥–µ–ª—ñ
    def export_preview_image_from_model(model, image_path, size)
      begin
        view = model.active_view
        
        puts "üì∏ –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–µ–≤—å—é: #{File.basename(image_path)}"
        puts "üìè –†–æ–∑–º—ñ—Ä: #{size}x#{size}"
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É
        options = {
          filename: image_path,
          width: size,
          height: size,
          antialias: true,
          compression: 0.9,
          transparent: true
        }
        
        success = view.write_image(options)
        
        if success
          puts "‚úÖ –ï–∫—Å–ø–æ—Ä—Ç —É—Å–ø—ñ—à–Ω–∏–π"
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É
          if File.exist?(image_path)
            file_size = File.size(image_path)
            puts "üìè –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: #{file_size} –±–∞–π—Ç"
            
            if file_size < 100
              puts "‚ö†Ô∏è –§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∏–π, –º–æ–∂–ª–∏–≤–æ –ø–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É"
              return false
            end
          end
          
          return true
        else
          puts "‚ùå –ï–∫—Å–ø–æ—Ä—Ç –Ω–µ –≤–¥–∞–≤—Å—è"
          return false
        end
        
      rescue => e
        puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: #{e.message}"
        false
      end
    end

    # –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞
    def close_temp_model(model)
      begin
        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
        if @temp_instance && @temp_instance.valid?
          @temp_instance.erase!
          puts "üîí –¢–∏–º—á–∞—Å–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –≤–∏–¥–∞–ª–µ–Ω–æ"
        end
        
        # –û—á–∏—â–∞—î–º–æ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        begin
          if model.respond_to?(:purge_unused)
            model.purge_unused
            puts "üßπ –ú–æ–¥–µ–ª—å –æ—á–∏—â–µ–Ω–∞ (purge_unused)"
          elsif model.definitions.respond_to?(:purge_unused)
            model.definitions.purge_unused
            puts "üßπ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –æ—á–∏—â–µ–Ω—ñ (definitions.purge_unused)"
          end
        rescue => e
          puts "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ –º–æ–¥–µ–ª—å: #{e.message}"
        end
        
        @temp_instance = nil
        
      rescue => e
        puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: #{e.message}"
      end
    end

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —à–ª—è—Ö—É –¥–æ –ø—Ä–µ–≤—å—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    def get_preview_image_path(skp_file_path)
      component_name = File.basename(skp_file_path, '.skp')
      File.join(PREVIEW_PATH, "#{component_name}_skp_preview.png")
    end

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –¥–ª—è –≤—Å—ñ—Ö .skp —Ñ–∞–π–ª—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    def generate_category_skp_previews(category)
      skp_files = Dir.glob(File.join(ProGran3::ASSETS_PATH, category, "*.skp"))
      
      puts "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: #{category}"
      puts "üìÅ –ó–Ω–∞–π–¥–µ–Ω–æ #{skp_files.length} .skp —Ñ–∞–π–ª—ñ–≤"
      
      generated_count = 0
      
      skp_files.each do |skp_file_path|
        if generate_preview_from_skp(skp_file_path)
          generated_count += 1
        end
      end
      
      puts "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ #{generated_count} –∑ #{skp_files.length} –ø—Ä–µ–≤—å—é"
      generated_count
    end

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –¥–ª—è –≤—Å—ñ—Ö .skp —Ñ–∞–π–ª—ñ–≤
    def generate_all_skp_previews
      categories = ["stands", "steles", "flowerbeds", "gravestones", "pavement_tiles"]
      total_generated = 0
      
      puts "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤..."
      
      categories.each do |category|
        total_generated += generate_category_skp_previews(category)
      end
      
      puts "üéâ –ó–∞–≥–∞–ª–æ–º –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ #{total_generated} –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤"
      total_generated
    end

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—å—é
    def needs_skp_preview_generation?(skp_file_path)
      image_path = get_preview_image_path(skp_file_path)
      !File.exist?(image_path)
    end

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ
    def ensure_skp_preview_exists(skp_file_path)
      if needs_skp_preview_generation?(skp_file_path)
        generate_preview_from_skp(skp_file_path)
      else
        get_preview_image_path(skp_file_path)
      end
    end

    # –ú–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    def test_skp_preview_generator
      puts "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤..."
      
      # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π .skp —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç—É
      test_file = nil
      categories = ["stands", "steles", "flowerbeds", "gravestones", "pavement_tiles"]
      
      categories.each do |category|
        skp_files = Dir.glob(File.join(ProGran3::ASSETS_PATH, category, "*.skp"))
        if skp_files.any?
          test_file = skp_files.first
          break
        end
      end
      
      if test_file
        puts "üß™ –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª: #{File.basename(test_file)}"
        result = generate_preview_from_skp(test_file, 128)
        
        if result
          puts "‚úÖ –¢–µ—Å—Ç —É—Å–ø—ñ—à–Ω–∏–π: #{File.basename(result)}"
        else
          puts "‚ùå –¢–µ—Å—Ç –Ω–µ –≤–¥–∞–≤—Å—è"
        end
        
        return result
      else
        puts "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ .skp —Ñ–∞–π–ª—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"
        return nil
      end
    end
  end
end
