# progran3.rb
require 'sketchup.rb'

module ProGran3
  # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –º–æ–¥—É–ª—ñ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
  require_relative 'progran3/loader'
  require_relative 'progran3/builders/foundation_builder'
  require_relative 'progran3/builders/tiling_builder'
  require_relative 'progran3/builders/cladding_builder'
  require_relative 'progran3/ui'
  require_relative 'progran3/test_features'
  require_relative 'progran3/preview_generator'
  require_relative 'progran3/skp_preview_generator'
  require_relative 'progran3/skp_preview_extractor'

  # –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
  def self.create_toolbar
    begin
      # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
      toolbar = ::UI::Toolbar.new("ProGran3")
      
      # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫—É –ø–ª–∞–≥—ñ–Ω–∞
      cmd = ::UI::Command.new("ProGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä") {
        begin
          ProGran3::UI.show_dialog
        rescue => e
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É UI: #{e.message}"
          ::UI.messagebox("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É ProGran3: #{e.message}")
        end
      }
      
      # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫–∏
      icon_path = "proGran3/icons/icon_24.png"
      if File.exist?(File.join(File.dirname(__FILE__), icon_path))
        cmd.small_icon = icon_path
        cmd.large_icon = icon_path
      else
        puts "‚ö†Ô∏è –Ü–∫–æ–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: #{icon_path}"
      end
      
      cmd.tooltip = "ProGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π"
      
      # –î–æ–¥–∞—î–º–æ –∫–æ–º–∞–Ω–¥—É –¥–æ –ø–∞–Ω–µ–ª—ñ
      toolbar.add_item(cmd)
      
      # –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–Ω–µ–ª—å
      toolbar.show
      
      puts "‚úÖ –ü–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ ProGran3 —Å—Ç–≤–æ—Ä–µ–Ω–∞"
    rescue => e
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤: #{e.message}"
    end
  end

  # –î–æ–¥–∞—î–º–æ –ø—É–Ω–∫—Ç —É –º–µ–Ω—é Plugins
  unless file_loaded?(__FILE__)
    # –ú–µ–Ω—é Plugins
    ::UI.menu("Plugins").add_item("proGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä") {
      ProGran3::UI.show_dialog
    }
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
    create_toolbar
    file_loaded(__FILE__)
  end

  # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞
  def self.reload
    puts "üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ ProGran3..."
    
    # –û—á–∏—â–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ñ–∞–π–ª–∏
    $LOADED_FEATURES.delete_if { |file| file.include?('progran3') }
    
    # –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–∞—à—ñ —Ñ–∞–π–ª–∏
    plugin_dir = File.dirname(__FILE__)
    our_files = [
      File.join(plugin_dir, 'proGran3.rb'),
      File.join(plugin_dir, 'proGran3', 'loader.rb'),
      File.join(plugin_dir, 'proGran3', 'ui.rb'),
      File.join(plugin_dir, 'proGran3', 'builders', 'foundation_builder.rb'),
      File.join(plugin_dir, 'proGran3', 'builders', 'tiling_builder.rb'),
      File.join(plugin_dir, 'proGran3', 'builders', 'cladding_builder.rb'),
      File.join(plugin_dir, 'proGran3', 'skp_preview_generator.rb'),
      File.join(plugin_dir, 'proGran3', 'skp_preview_extractor.rb')
    ]
    
    our_files.each do |file|
      if File.exist?(file)
        begin
          load file
          puts "  ‚úÖ #{File.basename(file)}"
        rescue => e
          puts "  ‚ùå #{File.basename(file)}: #{e.message}"
        end
      end
    end
    
    puts "üéâ –ü–ª–∞–≥—ñ–Ω –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!"
  end
  
  # –ú–µ—Ç–æ–¥ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
  def self.test
    puts "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ ProGran3..."
    puts "üìÅ –®–ª—è—Ö –¥–æ –ø–ª–∞–≥—ñ–Ω–∞: #{File.dirname(__FILE__)}"
    puts "üì¶ –í–µ—Ä—Å—ñ—è: 1.0.0"
    puts "‚úÖ –ü–ª–∞–≥—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!"
    
    # –¢–µ—Å—Ç—É—î–º–æ –Ω–æ–≤—É –ª–æ–≥—ñ–∫—É –ø—Ä–µ–≤—å—é
    puts "\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏ –ø—Ä–µ–≤—å—é..."
    if defined?(SkpPreviewGenerator)
      puts "‚úÖ –ù–æ–≤–∏–π –º–æ–¥—É–ª—å –ø—Ä–µ–≤—å—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ"
      test_result = test_skp_preview_generator
      if test_result
        puts "‚úÖ –¢–µ—Å—Ç –Ω–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏ —É—Å–ø—ñ—à–Ω–∏–π"
      else
        puts "‚ùå –¢–µ—Å—Ç –Ω–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏ –Ω–µ –≤–¥–∞–≤—Å—è"
      end
    else
      puts "‚ùå –ù–æ–≤–∏–π –º–æ–¥—É–ª—å –ø—Ä–µ–≤—å—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    end
  end

  # –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π

  # –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø—Ä–µ–≤—å—é (—Å—Ç–∞—Ä–∞ –ª–æ–≥—ñ–∫–∞)
  def self.generate_preview_image(component_path)
    PreviewGenerator.generate_preview_image(component_path)
  end

  def self.generate_web_preview(component_path)
    PreviewGenerator.generate_web_preview(component_path)
  end

  def self.ensure_preview_exists(component_path)
    PreviewGenerator.ensure_preview_exists(component_path)
  end

  # –ù–æ–≤—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ .skp —Ñ–∞–π–ª–∞–º–∏
  def self.generate_skp_preview(skp_file_path)
    SkpPreviewGenerator.generate_preview_from_skp(skp_file_path)
  end

  def self.generate_all_skp_previews
    SkpPreviewGenerator.generate_all_skp_previews
  end

  def self.test_skp_preview_generator
    SkpPreviewGenerator.test_skp_preview_generator
  end

      # –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤
    def self.extract_skp_preview(skp_file_path, size = 256)
      SkpPreviewExtractor.extract_preview_from_skp(skp_file_path, size)
    end

    def self.test_skp_preview_extractor
      SkpPreviewExtractor.test_extraction
    end
end