# –¢–µ—Å—Ç –∑–±–æ—Ä—É MAC –∞–¥—Ä–µ—Å–∏
def get_mac_address
  begin
    puts "üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–±–æ—Ä—É MAC –∞–¥—Ä–µ—Å–∏..."
    puts "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: #{RUBY_PLATFORM}"
    
    if RUBY_PLATFORM =~ /mswin|mingw|cygwin/
      puts "ü™ü Windows –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–∏—è–≤–ª–µ–Ω–∞"
      result = `getmac /fo csv /nh 2>nul`.split("\n").first
      puts "–†–µ–∑—É–ª—å—Ç–∞—Ç getmac: #{result.inspect}"
      
      if result && result.include?(",")
        mac = result.split(",")[0].strip.gsub(/[^0-9A-Fa-f]/, '')
        puts "–û—á–∏—â–µ–Ω–∞ MAC: #{mac.inspect}"
        formatted_mac = mac.scan(/.{2}/).join(':').upcase if mac.length == 12
        puts "–§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ MAC: #{formatted_mac.inspect}"
        return formatted_mac
      end
    elsif RUBY_PLATFORM =~ /darwin/
      puts "üçé macOS –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–∏—è–≤–ª–µ–Ω–∞"
      result = `ifconfig en0 | grep ether 2>/dev/null`.strip
      puts "–†–µ–∑—É–ª—å—Ç–∞—Ç ifconfig: #{result.inspect}"
      
      if result =~ /ether\s+([0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2})/
        return $1.upcase
      end
    else
      puts "üêß Linux –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–∏—è–≤–ª–µ–Ω–∞"
      result = `cat /sys/class/net/eth0/address 2>/dev/null`.strip
      puts "–†–µ–∑—É–ª—å—Ç–∞—Ç cat: #{result.inspect}"
      return result.upcase if result.match(/^[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}$/)
    end
  rescue => e
    puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è MAC –∞–¥—Ä–µ—Å–∏: #{e.message}"
  end
  
  puts "‚ö†Ô∏è MAC –∞–¥—Ä–µ—Å–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"
  nil
end

# –¢–µ—Å—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
mac = get_mac_address
puts "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: #{mac.inspect}"
