# progran3.rb
require 'sketchup.rb'
require 'net/http'
require 'json'
require 'socket'
require 'timeout'

# –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞
$plugin_blocked = false

# –ö–ª–∞—Å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –ø–ª–∞–≥—ñ–Ω–∞
class ProGran3Tracker
  def initialize(base_url = nil)
    # ‚ö†Ô∏è –í–ê–ñ–õ–ò–í–û: –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–µ–ø–ª–æ—é —Å–µ—Ä–≤–µ—Ä–∞ –æ–Ω–æ–≤–∏—Ç–∏ URL –Ω–∏–∂—á–µ!
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: vercel ls
    @base_url = base_url || ENV['PROGRAN3_TRACKING_URL'] || 'https://progran3-tracking-server-7nm5dyi3b-provis3ds-projects.vercel.app'
    @plugin_id = generate_unique_plugin_id
    @is_running = false
    @heartbeat_thread = nil
    @retry_count = 0
    @max_retries = 3
    @retry_delay = 30
  end

  private

  def generate_unique_plugin_id
    hostname = Socket.gethostname.downcase.gsub(/[^a-z0-9]/, '-')
    username = ENV['USERNAME'] || ENV['USER'] || 'sketchup-user'
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω–∏–π ID –Ω–∞ –æ—Å–Ω–æ–≤—ñ hostname —Ç–∞ username
    "progran3-#{hostname}-#{username}".downcase
  end

  public

  def start_tracking
    if @is_running
      puts "üìä –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–∏–π –∑–∞–ø—É—Å–∫"
      return
    end
    
    @is_running = true
    puts "üöÄ –ó–∞–ø—É—Å–∫ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è ProGran3..."
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–µ—Ä—à–∏–π heartbeat
    puts "üöÄ [#{Time.now.strftime('%H:%M:%S')}] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—à–æ–≥–æ heartbeat..."
    send_heartbeat
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤—É –∑–∞–¥–∞—á—É –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö heartbeat
    @heartbeat_thread = Thread.new do
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –§–æ–Ω–æ–≤–∞ –∑–∞–¥–∞—á–∞ heartbeat –∑–∞–ø—É—â–µ–Ω–∞"
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] Thread ID: #{Thread.current.object_id}"
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] Thread alive: #{Thread.current.alive?}"
      
      loop_count = 0
      loop do
        loop_count += 1
        puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –¶–∏–∫–ª #{loop_count}: @is_running = #{@is_running}"
        
        break unless @is_running
        
        puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ó–∞—Å–∏–Ω–∞—î–º–æ –Ω–∞ 60 —Å–µ–∫—É–Ω–¥..."
        sleep(60) # 60 —Å–µ–∫—É–Ω–¥ = 1 —Ö–≤–∏–ª–∏–Ω–∞
        
        puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ü—Ä–æ–∫–∏–Ω—É–ª–∏—Å—è –ø—ñ—Å–ª—è 60 —Å–µ–∫—É–Ω–¥"
        puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ @is_running = #{@is_running}"
        
        if @is_running
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] ========== –†–ï–ì–£–õ–Ø–†–ù–ò–ô HEARTBEAT =========="
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ó–∞–ø—É—Å–∫ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ heartbeat..."
          send_heartbeat
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –†–µ–≥—É–ª—è—Ä–Ω–∏–π heartbeat –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        else
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] @is_running = false, –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É"
        end
      end
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –§–æ–Ω–æ–≤–∞ –∑–∞–¥–∞—á–∞ heartbeat –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    end
    
    # –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É
    sleep(1)
    puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –ø–æ—Ç–æ–∫—É:"
    puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] Thread alive: #{@heartbeat_thread.alive?}"
    puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] Thread status: #{@heartbeat_thread.status}"
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ SketchUp timer —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    if defined?(UI) && UI.respond_to?(:start_timer)
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ó–∞–ø—É—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ SketchUp..."
      @sketchup_timer = UI.start_timer(60, true) do
        if @is_running
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] ========== TIMER HEARTBEAT =========="
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ó–∞–ø—É—Å–∫ heartbeat —á–µ—Ä–µ–∑ SketchUp timer..."
          send_heartbeat
        else
          puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] @is_running = false, –∑—É–ø–∏–Ω—è—î–º–æ timer"
          UI.stop_timer(@sketchup_timer) if @sketchup_timer
        end
      end
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] SketchUp timer –∑–∞–ø—É—â–µ–Ω–æ: #{@sketchup_timer}"
    end
    
    puts "‚úÖ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–µ. Plugin ID: #{@plugin_id}"
  end

  def stop_tracking
    puts "üîÑ –ü–æ—á–∞—Ç–æ–∫ –∑—É–ø–∏–Ω–∫–∏ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è..."
    @is_running = false
    
    # –ó—É–ø–∏–Ω—è—î–º–æ SketchUp timer —è–∫—â–æ –≤—ñ–Ω –∑–∞–ø—É—â–µ–Ω–∏–π
    if @sketchup_timer
      puts "üîÑ [#{Time.now.strftime('%H:%M:%S')}] –ó—É–ø–∏–Ω—è—î–º–æ SketchUp timer: #{@sketchup_timer}"
      UI.stop_timer(@sketchup_timer) if defined?(UI) && UI.respond_to?(:stop_timer)
      @sketchup_timer = nil
    end
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–∏–≥–Ω–∞–ª –ø—Ä–æ –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–ª–∞–≥—ñ–Ω–∞
    puts "üì§ –°–ø—Ä–æ–±–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª—É –∑–∞–∫—Ä–∏—Ç—Ç—è..."
    send_shutdown_signal
    
    if @heartbeat_thread
      # Graceful shutdown - —á–µ–∫–∞—î–º–æ –¥–æ 5 —Å–µ–∫—É–Ω–¥
      puts "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è heartbeat –ø–æ—Ç–æ–∫—É..."
      @heartbeat_thread.join(5)
      @heartbeat_thread.kill if @heartbeat_thread.alive?
      puts "‚úÖ Heartbeat –ø–æ—Ç—ñ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    end
    
    puts "‚èπÔ∏è –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ"
  end

  def send_heartbeat
    timestamp = Time.now.strftime('%H:%M:%S')
    puts "üì° [#{timestamp}] ========== HEARTBEAT –í–Ü–î–ü–†–ê–í–ö–ê =========="
    puts "üì° [#{timestamp}] Plugin ID: #{@plugin_id}"
    puts "üì° [#{timestamp}] –°–µ—Ä–≤–µ—Ä: #{@base_url}"
    puts "üì° [#{timestamp}] ==========================================="
    send_heartbeat_with_retry
  end

  def send_shutdown_signal
    begin
      uri = URI.parse("#{@base_url}/api/heartbeat")
      
      data = {
        plugin_id: @plugin_id,
        plugin_name: "ProGran3",
        version: get_plugin_version,
        user_id: get_user_identifier,
        computer_name: Socket.gethostname,
        system_info: get_system_info,
        timestamp: Time.now.iso8601,
        action: "plugin_shutdown",  # –°–∏–≥–Ω–∞–ª –ø—Ä–æ –∑–∞–∫—Ä–∏—Ç—Ç—è
        source: "sketchup_plugin",
        update_existing: true,
        force_update: false
      }
      
      http = Net::HTTP.new(uri.host, uri.port)
      http.use_ssl = true if uri.scheme == 'https'
      http.read_timeout = 5
      http.open_timeout = 5
      
      request = Net::HTTP::Post.new(uri)
      request['Content-Type'] = 'application/json'
      request['User-Agent'] = "ProGran3-Plugin/#{get_plugin_version}"
      request.body = data.to_json
      
      timestamp = Time.now.strftime('%H:%M:%S')
      puts "üì§ [#{timestamp}] ========== –°–ò–ì–ù–ê–õ –ó–ê–ö–†–ò–¢–¢–Ø =========="
      puts "üì§ [#{timestamp}] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª—É –∑–∞–∫—Ä–∏—Ç—Ç—è –¥–æ: #{@base_url}/api/heartbeat"
      puts "üìä [#{timestamp}] Plugin ID: #{data[:plugin_id]}"
      puts "üìã [#{timestamp}] Action: #{data[:action]}"
      puts "üì§ [#{timestamp}] ========================================"
      
      response = http.request(request)
      
      if response.code == '200'
        puts "‚úÖ [#{timestamp}] ‚úÖ –°–ò–ì–ù–ê–õ –ó–ê–ö–†–ò–¢–¢–Ø –£–°–ü–Ü–®–ù–û –í–Ü–î–ü–†–ê–í–õ–ï–ù–û!"
        puts "‚úÖ [#{timestamp}] ========== –ü–õ–ê–ì–Ü–ù –ó–ê–ö–†–ò–¢–û =========="
      else
        puts "‚ö†Ô∏è [#{timestamp}] –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª—É –∑–∞–∫—Ä–∏—Ç—Ç—è: #{response.code}"
      end
      
    rescue => e
      puts "‚ö†Ô∏è [#{Time.now.strftime('%H:%M:%S')}] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Å–∏–≥–Ω–∞–ª—É –∑–∞–∫—Ä–∏—Ç—Ç—è: #{e.message}"
    end
  end

  private

  def send_heartbeat_with_retry
    begin
      timestamp = Time.now.strftime('%H:%M:%S')
      puts "üì° [#{timestamp}] –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ HTTP –∑–∞–ø–∏—Ç—É..."
      
      uri = URI("#{@base_url}/api/heartbeat")
      
      # –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL
      unless uri.scheme == 'https' || uri.scheme == 'http'
        raise "–ù–µ–≤—ñ—Ä–Ω–∏–π URL: #{@base_url}"
      end
      
      data = {
        plugin_id: @plugin_id,
        plugin_name: "ProGran3",
        version: get_plugin_version,
        user_id: get_user_identifier,
        computer_name: Socket.gethostname,
        system_info: get_system_info,
        timestamp: Time.now.iso8601,
        action: "heartbeat_update",  # –î–æ–¥–∞—î–º–æ —Ç–∏–ø –¥—ñ—ó
        source: "sketchup_plugin",   # –î–æ–¥–∞—î–º–æ –¥–∂–µ—Ä–µ–ª–æ
        update_existing: true,       # –Ø–≤–Ω–æ –≤–∫–∞–∑—É—î–º–æ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π
        force_update: false          # –ù–µ –ø—Ä–∏–º—É—Å–æ–≤–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤–∏–π
      }
      
      puts "üì° –î–∞–Ω—ñ heartbeat: #{data.inspect}"
      
      # –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
      validate_heartbeat_data(data)
      
      http = Net::HTTP.new(uri.host, uri.port)
      http.use_ssl = true if uri.scheme == 'https'
      http.read_timeout = 10
      http.open_timeout = 10
      
      request = Net::HTTP::Post.new(uri)
      request['Content-Type'] = 'application/json'
      request['User-Agent'] = "ProGran3-Plugin/#{get_plugin_version}"
      request.body = data.to_json
      
        puts "üì° [#{timestamp}] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ heartbeat –¥–æ: #{@base_url}/api/heartbeat"
        puts "üìä [#{timestamp}] Plugin ID: #{data[:plugin_id]}"
        puts "üìã [#{timestamp}] Action: #{data[:action]}"
        puts "üìã [#{timestamp}] Update existing: #{data[:update_existing]}"
        puts "üìã [#{timestamp}] Timestamp: #{data[:timestamp]}"
      
      response = http.request(request)
      
      puts "üì® [#{timestamp}] –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: #{response.code} #{response.message}"
      puts "üìÑ [#{timestamp}] –¢—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: #{response.body}"
      
      if response.code == '200'
        # –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (httpbin.org) –∑–∞–≤–∂–¥–∏ —É—Å–ø—ñ—Ö
        if @base_url.include?('httpbin.org')
          puts "üíì [#{timestamp}] ‚úÖ HEARTBEAT –£–°–ü–Ü–®–ù–û –í–Ü–î–ü–†–ê–í–õ–ï–ù–û!"
          puts "üíì [#{timestamp}] ========== HEARTBEAT –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û =========="
          @retry_count = 0 # –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ —É—Å–ø—ñ—Ö—É
        elsif @base_url.include?('vercel.app')
          # –î–ª—è Vercel —Å–µ—Ä–≤–µ—Ä–∞ - –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
          begin
            result = JSON.parse(response.body)
            if result['success'] && result['plugin']
              puts "üíì [#{timestamp}] ‚úÖ HEARTBEAT –£–°–ü–Ü–®–ù–û –í–Ü–î–ü–†–ê–í–õ–ï–ù–û!"
              puts "üìã [#{timestamp}] –°–µ—Ä–≤–µ—Ä ID: #{result['plugin']['id']}"
              puts "üìã [#{timestamp}] Plugin ID: #{result['plugin']['plugin_id']}"
              puts "üìã [#{timestamp}] Last heartbeat: #{result['plugin']['last_heartbeat']}"
              puts "üìã [#{timestamp}] Is active: #{result['plugin']['is_active']}"
              puts "üìã [#{timestamp}] Is blocked: #{result['plugin']['is_blocked']}"
              
              # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
              is_blocked = result['plugin']['is_blocked']
              if is_blocked
                puts "üö´ [#{timestamp}] ‚ö†Ô∏è –ü–õ–ê–ì–Ü–ù –ó–ê–ë–õ–û–ö–û–í–ê–ù–û –°–ï–†–í–ï–†–û–ú!"
                @plugin_blocked = true
                $plugin_blocked = true
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ UI
                show_blocking_card_in_ui
              else
                puts "‚úÖ [#{timestamp}] –ü–ª–∞–≥—ñ–Ω –∞–∫—Ç–∏–≤–Ω–∏–π (–Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ)"
                @plugin_blocked = false
                $plugin_blocked = false
                
                # –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —è–∫—â–æ –ø–ª–∞–≥—ñ–Ω —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
                hide_blocking_card_in_ui
              end
              
              puts "üíì [#{timestamp}] ========== HEARTBEAT –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û =========="
              
              # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ plugin_id —Å–ø—ñ–≤–ø–∞–¥–∞—î
              if result['plugin']['plugin_id'] != @plugin_id
                puts "‚ö†Ô∏è –£–í–ê–ì–ê: Plugin ID –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î!"
                puts "   –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: #{@plugin_id}"
                puts "   –û—Ç—Ä–∏–º–∞–Ω–æ: #{result['plugin']['plugin_id']}"
              end
              
              @retry_count = 0
            else
              puts "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –æ—á—ñ–∫—É–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å"
              @retry_count = 0 # –í—Å–µ –æ–¥–Ω–æ –≤–≤–∞–∂–∞—î–º–æ —É—Å–ø—ñ—Ö–æ–º –ø—Ä–∏ 200
            end
          rescue => e
            puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: #{e.message}"
            @retry_count = 0
          end
        else
          # –î–ª—è —ñ–Ω—à–∏—Ö —Å–µ—Ä–≤–µ—Ä—ñ–≤ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å
          result = JSON.parse(response.body)
          if result['success'] || result['status'] == 'ok'
            puts "üíì [#{timestamp}] ‚úÖ HEARTBEAT –£–°–ü–Ü–®–ù–û –í–Ü–î–ü–†–ê–í–õ–ï–ù–û!"
            puts "üíì [#{timestamp}] ========== HEARTBEAT –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û =========="
            @retry_count = 0 # –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ —É—Å–ø—ñ—Ö—É
          else
            puts "‚ùå [#{timestamp}] –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É: #{result['error'] || result['message']}"
            raise "–°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É: #{result['error'] || result['message']}"
          end
        end
      else
        puts "‚ùå [#{timestamp}] HTTP –ø–æ–º–∏–ª–∫–∞: #{response.code} - #{response.message}"
        raise "HTTP –ø–æ–º–∏–ª–∫–∞: #{response.code} - #{response.message}"
      end
      
    rescue Timeout::Error
      puts "‚è∞ [#{Time.now.strftime('%H:%M:%S')}] ‚ùå –¢–ê–ô–ú–ê–£–¢ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ heartbeat"
      handle_heartbeat_error("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ heartbeat")
    rescue => e
      puts "üí• [#{Time.now.strftime('%H:%M:%S')}] ‚ùå –ü–û–ú–ò–õ–ö–ê –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ heartbeat: #{e.message}"
      handle_heartbeat_error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ heartbeat: #{e.message}")
    end
  end
  
  public
  
  # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ (–ø—É–±–ª—ñ—á–Ω–∏–π)
  def check_server_status
    begin
      uri = URI("#{@base_url}/api/plugins")
      
      # –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL
      unless uri.scheme == 'https' || uri.scheme == 'http'
        raise "–ù–µ–≤—ñ—Ä–Ω–∏–π URL: #{@base_url}"
      end
      
      http = Net::HTTP.new(uri.host, uri.port)
      http.use_ssl = (uri.scheme == 'https')
      http.read_timeout = 30
      http.open_timeout = 10
      
      request = Net::HTTP::Get.new(uri)
      request['User-Agent'] = "ProGran3-Plugin/#{get_plugin_version}"
      
      puts "üì° –ó–∞–ø–∏—Ç —Å—Ç–∞—Ç—É—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞: #{@base_url}/api/plugins"
      
      response = http.request(request)
      
      puts "üì® –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: #{response.code} #{response.message}"
      
      if response.code == '200'
        begin
          result = JSON.parse(response.body)
          puts "üìÑ –î–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞:"
          puts JSON.pretty_generate(result)
          
          # –®—É–∫–∞—î–º–æ –Ω–∞—à –ø–ª–∞–≥—ñ–Ω
          if result.is_a?(Array)
            our_plugin = result.find { |p| p['plugin_id'] == @plugin_id }
            if our_plugin
              puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–∞—à –ø–ª–∞–≥—ñ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:"
              puts "   ID: #{our_plugin['id']}"
              puts "   Plugin ID: #{our_plugin['plugin_id']}"
              puts "   Last heartbeat: #{our_plugin['last_heartbeat']}"
              puts "   Is active: #{our_plugin['is_active']}"
            else
              puts "‚ùå –ù–∞—à –ø–ª–∞–≥—ñ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ"
              puts "   –®—É–∫–∞—î–º–æ: #{@plugin_id}"
            end
          end
        rescue => e
          puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: #{e.message}"
        end
      else
        puts "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å: #{response.code}"
      end
      
    rescue => e
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Å—Ç–∞—Ç—É—Å—É: #{e.message}"
    end
  end
  
  

  private

  def get_plugin_version
    # –ß–∏—Ç–∞—î–º–æ –≤–µ—Ä—Å—ñ—é –∑ constants.rb –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É
    if defined?(ProGran3::Constants) && ProGran3::Constants.const_defined?(:VERSION)
      ProGran3::Constants::VERSION
    else
      "1.0.0"
    end
  end

  def get_user_identifier
    # –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    username = ENV['USERNAME'] || ENV['USER'] || 'sketchup-user'
    hostname = Socket.gethostname
    "#{username}@#{hostname}"
  end

  def get_system_info
    {
      os: RUBY_PLATFORM,
      ruby_version: RUBY_VERSION,
      sketchup_version: defined?(Sketchup) ? Sketchup.version : 'unknown',
      architecture: RUBY_PLATFORM.include?('x64') ? '64-bit' : '32-bit'
    }
  end


  def validate_heartbeat_data(data)
    required_fields = [:plugin_id, :plugin_name, :version, :user_id, :computer_name]
    required_fields.each do |field|
      if data[field].nil? || data[field].to_s.strip.empty?
        raise "–í—ñ–¥—Å—É—Ç–Ω—î –æ–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ–ª–µ: #{field}"
      end
    end
  end

  def send_heartbeat_direct
    begin
      timestamp = Time.now.strftime('%H:%M:%S')
      puts "üì° [#{timestamp}] Heartbeat –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è..."
      
      uri = URI("#{@base_url}/api/heartbeat")
      
      data = {
        plugin_id: @plugin_id,
        plugin_name: "ProGran3",
        version: get_plugin_version,
        user_id: get_user_identifier,
        computer_name: Socket.gethostname,
        system_info: get_system_info,
        timestamp: Time.now.iso8601,
        action: "heartbeat_update",
        source: "sketchup_plugin",
        update_existing: true,
        force_update: false
      }
      
      validate_heartbeat_data(data)
      
      http = Net::HTTP.new(uri.host, uri.port)
      http.use_ssl = (uri.scheme == 'https')
      http.read_timeout = 30
      http.open_timeout = 10
      
      request = Net::HTTP::Post.new(uri)
      request['Content-Type'] = 'application/json'
      request['User-Agent'] = "ProGran3-Plugin/#{get_plugin_version}"
      request.body = data.to_json
      
      puts "üì° [#{timestamp}] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ heartbeat –¥–æ: #{@base_url}/api/heartbeat"
      
      response = http.request(request)
      
      puts "üì® [#{timestamp}] –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: #{response.code} #{response.message}"
      puts "üìÑ [#{timestamp}] –¢—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: #{response.body}"
      
      if response.code == '200'
        begin
          result = JSON.parse(response.body)
          if result['success'] && result['plugin']
            is_blocked = result['plugin']['is_blocked'] || false
            is_active = result['plugin']['is_active'] || false
            puts "üì° [#{timestamp}] –°—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è: #{is_blocked ? '–ó–ê–ë–õ–û–ö–û–í–ê–ù–û' : '–ê–ö–¢–ò–í–ù–ò–ô'}"
            puts "üì° [#{timestamp}] –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ: #{is_active ? '–ê–ö–¢–ò–í–ù–ò–ô' : '–ù–ï–ê–ö–¢–ò–í–ù–ò–ô'}"
            
            # –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
            @plugin_blocked = is_blocked
            $plugin_blocked = is_blocked
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–∫–∞–∑—É—î–º–æ/–ø—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            if is_blocked
              show_blocking_card_in_ui
            else
              hide_blocking_card_in_ui
            end
            
            return {
              success: true,
              blocked: is_blocked,
              plugin_id: @plugin_id
            }
          else
            return {
              success: false,
              error: "–ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞",
              blocked: false
            }
          end
        rescue JSON::ParserError => e
          return {
            success: false,
            error: "–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON: #{e.message}",
            blocked: false
          }
        end
      else
        return {
          success: false,
          error: "HTTP –ø–æ–º–∏–ª–∫–∞: #{response.code} - #{response.message}",
          blocked: false
        }
      end
    rescue => e
      puts "‚ùå [#{timestamp}] –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ heartbeat: #{e.message}"
      return {
        success: false,
        error: e.message,
        blocked: false
      }
    end
  end

  # –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ UI
  def show_blocking_card_in_ui
    begin
      # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ UI –≤—ñ–¥–∫—Ä–∏—Ç–æ
      if defined?(ProGran3::UI) && ProGran3::UI.instance_variable_get(:@dialog) && ProGran3::UI.instance_variable_get(:@dialog).visible?
        puts "üì± –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ UI..."
        ProGran3::UI.instance_variable_get(:@dialog).execute_script("showBlockingCard();")
        puts "‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø–æ–∫–∞–∑–∞–Ω–∞"
      else
        puts "üì± UI –Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç–æ - –∫–∞—Ä—Ç–æ—á–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –±—É–¥–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ"
      end
    rescue => e
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –∫–∞—Ä—Ç–æ—á–∫–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è: #{e.message}"
    end
  end

  # –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ UI
  def hide_blocking_card_in_ui
    begin
      # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ UI –≤—ñ–¥–∫—Ä–∏—Ç–æ
      if defined?(ProGran3::UI) && ProGran3::UI.instance_variable_get(:@dialog) && ProGran3::UI.instance_variable_get(:@dialog).visible?
        puts "üì± –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ UI..."
        ProGran3::UI.instance_variable_get(:@dialog).execute_script("hideBlockingCard();")
        puts "‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–∞"
      end
    rescue => e
      puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∫–∞—Ä—Ç–æ—á–∫–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è: #{e.message}"
    end
  end

  def handle_heartbeat_error(message)
    @retry_count += 1
    timestamp = Time.now.strftime('%H:%M:%S')
    puts "‚ùå [#{timestamp}] #{message}"
    
    if @retry_count < @max_retries
      puts "üîÑ [#{timestamp}] –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ #{@retry_count}/#{@max_retries} —á–µ—Ä–µ–∑ #{@retry_delay} —Å–µ–∫—É–Ω–¥..."
      sleep(@retry_delay)
      send_heartbeat_with_retry
    else
      puts "‚ùå [#{timestamp}] ‚ùå‚ùå‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê ‚ùå‚ùå‚ùå"
      puts "‚ùå [#{timestamp}] –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ heartbeat –ø—ñ—Å–ª—è #{@max_retries} —Å–ø—Ä–æ–±"
      puts "‚ùå [#{timestamp}] –ü–ª–∞–≥—ñ–Ω –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏, –∞–ª–µ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–µ"
      @retry_count = 0 # –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
    end
  end
end

module ProGran3
  # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –Ω–æ–≤—ñ —Å–∏—Å—Ç–µ–º–Ω—ñ –º–æ–¥—É–ª—ñ –ø–µ—Ä—à–∏–º–∏
  require_relative 'progran3/constants'
  require_relative 'progran3/logger'
  require_relative 'progran3/error_handler'
  require_relative 'progran3/validation'
  require_relative 'progran3/dimensions_manager'
  require_relative 'progran3/coordination_manager'
  require_relative 'progran3/callback_manager'
  
  # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –º–æ–¥—É–ª—ñ
  require_relative 'progran3/loader'
  require_relative 'progran3/builders/foundation_builder'
  require_relative 'progran3/builders/tiling_builder'
  require_relative 'progran3/builders/cladding_builder'
  require_relative 'progran3/builders/blind_area_builder'
  require_relative 'progran3/ui'
  require_relative 'progran3/skp_preview_extractor'

  # –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
  def self.create_toolbar
    ErrorHandler.safe_execute("Toolbar", "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤") do
      # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
      toolbar = ::UI::Toolbar.new("ProGran3")
      
      # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫—É –ø–ª–∞–≥—ñ–Ω–∞
      cmd = ::UI::Command.new("ProGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä") {
        ErrorHandler.safe_execute("UI", "–ó–∞–ø—É—Å–∫ –¥—ñ–∞–ª–æ–≥—É") do
          ProGran3::UI.show_dialog
        end
      }
      
      # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫–∏
      icon_path = File.join(Constants::ICONS_PATH, "icon_24.png")
      ErrorHandler.validate_file_exists(icon_path, "Toolbar")
      cmd.small_icon = icon_path
      cmd.large_icon = icon_path
      
      cmd.tooltip = "ProGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π"
      
      # –î–æ–¥–∞—î–º–æ –∫–æ–º–∞–Ω–¥—É –¥–æ –ø–∞–Ω–µ–ª—ñ
      toolbar.add_item(cmd)
      
      # –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–Ω–µ–ª—å
      toolbar.show
      
      Logger.success("–ü–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ ProGran3 —Å—Ç–≤–æ—Ä–µ–Ω–∞", "Toolbar")
    end
  end

  # –î–æ–¥–∞—î–º–æ –ø—É–Ω–∫—Ç —É –º–µ–Ω—é Plugins
  unless file_loaded?(__FILE__)
    # –ú–µ–Ω—é Plugins
    ::UI.menu("Plugins").add_item("proGran3 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä") {
      ErrorHandler.safe_execute("Menu", "–ó–∞–ø—É—Å–∫ –∑ –º–µ–Ω—é") do
        ProGran3::UI.show_dialog
      end
    }
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
    create_toolbar
    file_loaded(__FILE__)
    
    Logger.info("–ü–ª–∞–≥—ñ–Ω ProGran3 –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ", "Main")
  end

  # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞
  def self.reload
    Logger.start("–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ ProGran3", "Main")
    
    # –û—á–∏—â–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ñ–∞–π–ª–∏
    $LOADED_FEATURES.delete_if { |file| file.include?('progran3') }
    
          # –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–∞—à—ñ —Ñ–∞–π–ª–∏
      plugin_dir = File.dirname(__FILE__)
      our_files = [
        File.join(plugin_dir, 'proGran3.rb'),
        File.join(plugin_dir, 'proGran3', 'constants.rb'),
        File.join(plugin_dir, 'proGran3', 'logger.rb'),
        File.join(plugin_dir, 'proGran3', 'error_handler.rb'),
        File.join(plugin_dir, 'proGran3', 'validation.rb'),
        File.join(plugin_dir, 'proGran3', 'dimensions_manager.rb'),
        File.join(plugin_dir, 'proGran3', 'coordination_manager.rb'),
        File.join(plugin_dir, 'proGran3', 'callback_manager.rb'),
        File.join(plugin_dir, 'proGran3', 'loader.rb'),
        File.join(plugin_dir, 'proGran3', 'ui.rb'),
        File.join(plugin_dir, 'proGran3', 'builders', 'foundation_builder.rb'),
        File.join(plugin_dir, 'proGran3', 'builders', 'tiling_builder.rb'),
        File.join(plugin_dir, 'proGran3', 'builders', 'cladding_builder.rb'),
        File.join(plugin_dir, 'proGran3', 'builders', 'blind_area_builder.rb'),
        File.join(plugin_dir, 'proGran3', 'skp_preview_extractor.rb'),
        File.join(plugin_dir, 'proGran3', 'carousel', 'carousel_manager.rb'),
        File.join(plugin_dir, 'proGran3', 'carousel', 'carousel_ui.rb')
      ]
    
    our_files.each do |file|
      if File.exist?(file)
        ErrorHandler.safe_execute("Reload", "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è #{File.basename(file)}") do
          load file
          Logger.success(File.basename(file), "Reload")
        end
      else
        Logger.warn("–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: #{File.basename(file)}", "Reload")
      end
    end
    
    Logger.finish("–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ ProGran3", "Main")
  end
  

  # –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–≤—å—é –∑ .skp —Ñ–∞–π–ª—ñ–≤
  def self.extract_skp_preview(component_path, size = 256)
    SkpPreviewExtractor.extract_preview(component_path, size)
  end
  
  # –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è base64 –¥–∞–Ω–∏—Ö –ø—Ä–µ–≤—å—é
  def self.get_preview_base64(component_path, size = 256)
    SkpPreviewExtractor.get_preview_base64(component_path, size)
  end

  # –ú–µ—Ç–æ–¥ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
  def self.coordinate_elements
    CoordinationManager.update_all_elements
  end



# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
if defined?(Sketchup)
  # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Ç—Ä–µ–∫–µ—Ä –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é
  $progran3_tracker = ProGran3Tracker.new
  
  # –¢—Ä–µ–∫–µ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –∞–ª–µ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ UI
  puts "üìä –¢—Ä–µ–∫–µ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ (–≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ UI)"
  
  # –ó—É–ø–∏–Ω—è—î–º–æ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ SketchUp
  at_exit do
    begin
      $progran3_tracker.stop_tracking if $progran3_tracker
    rescue => e
      puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—É–ø–∏–Ω—Ü—ñ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è: #{e.message}"
    end
  end
  
  # –ú–µ—Ç–æ–¥–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç—Ä–µ–∫–µ—Ä–æ–º (–∑–∞–≤–∂–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ)
  def self.start_tracking
    $progran3_tracker&.start_tracking
  end
  
  def self.stop_tracking
    $progran3_tracker&.stop_tracking
  end
  
  def self.send_heartbeat
    $progran3_tracker&.send_heartbeat
  end
  
  # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞
  def self.check_blocking_status
    begin
      if $progran3_tracker
        result = $progran3_tracker.send_heartbeat_direct
        
        if result && result[:success]
          return {
            success: true,
            blocked: result[:blocked] || false,
            active: !result[:blocked] # –ê–∫—Ç–∏–≤–Ω–∏–π —è–∫—â–æ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
          }
        else
          return {
            success: false,
            blocked: false,
            active: false,
            error: result ? result[:error] : "No response from server"
          }
        end
      else
        return {
          success: false,
          blocked: false,
          active: false,
          error: "Tracker not initialized"
        }
      end
    rescue => e
      return {
        success: false,
        blocked: false,
        active: false,
        error: e.message
      }
    end
  end
  
  
  def self.tracking_status
    if $progran3_tracker
      is_running = $progran3_tracker.instance_variable_get(:@is_running)
      plugin_id = $progran3_tracker.instance_variable_get(:@plugin_id)
      thread_alive = $progran3_tracker.instance_variable_get(:@heartbeat_thread)&.alive?
      
      puts "üìä –°—Ç–∞—Ç—É—Å –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è:"
      puts "   üîÑ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–µ: #{is_running ? '‚úÖ –¢–ê–ö' : '‚ùå –ù–Ü'}"
      puts "   üÜî Plugin ID: #{plugin_id}"
      puts "   üßµ –§–æ–Ω–æ–≤–∞ –∑–∞–¥–∞—á–∞: #{thread_alive ? '‚úÖ –ü–†–ê–¶–Æ–Ñ' : '‚ùå –ù–ï –ü–†–ê–¶–Æ–Ñ'}"
      
      {
        running: is_running,
        plugin_id: plugin_id,
        thread_alive: thread_alive,
        base_url: $progran3_tracker.instance_variable_get(:@base_url),
        retry_count: $progran3_tracker.instance_variable_get(:@retry_count),
        max_retries: $progran3_tracker.instance_variable_get(:@max_retries),
        retry_delay: $progran3_tracker.instance_variable_get(:@retry_delay)
      }
    else
      { error: "–¢—Ä–µ–∫–µ—Ä –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π" }
    end
  end
  
  def self.create_new_tracker(server_url = nil)
    # –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä–∏–π —Ç—Ä–µ–∫–µ—Ä
    $progran3_tracker&.stop_tracking
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —Ç—Ä–µ–∫–µ—Ä –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º URL
    $progran3_tracker = ProGran3Tracker.new(server_url)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
    $progran3_tracker.start_tracking
    
    puts "‚úÖ –ù–æ–≤–∏–π —Ç—Ä–µ–∫–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ"
  end
  

  # –ù–ï –∑–∞–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è UI
  puts "üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
end
end