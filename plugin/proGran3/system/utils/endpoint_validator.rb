# plugin/proGran3/system/utils/endpoint_validator.rb
# –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö endpoint'—ñ–≤ –¥–ª—è –±–µ–∑–ø–µ–∫–∏

require 'uri'
require 'net/http'

module ProGran3
  module System
    module Utils
      class EndpointValidator
        
        # –î–æ–∑–≤–æ–ª–µ–Ω—ñ –¥–æ–º–µ–Ω–∏ (whitelist)
        ALLOWED_DOMAINS = [
          'server-hbf7li0u7-provis3ds-projects.vercel.app',
          'progran3-server.vercel.app',
          'progran3-api.vercel.app'
        ].freeze
        
        # –î–æ–∑–≤–æ–ª–µ–Ω—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏
        ALLOWED_PROTOCOLS = ['https'].freeze
        
        # –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL —Å–µ—Ä–≤–µ—Ä–∞
        # @param url [String] URL –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        # @return [Boolean] true —è–∫—â–æ URL –±–µ–∑–ø–µ—á–Ω–∏–π
        def self.validate_url(url)
          begin
            uri = URI(url)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—É
            unless ALLOWED_PROTOCOLS.include?(uri.scheme)
              raise SecurityError, "–ù–µ–±–µ–∑–ø–µ—á–Ω–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª: #{uri.scheme}"
            end
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–º–µ–Ω—É
            unless ALLOWED_DOMAINS.include?(uri.host)
              raise SecurityError, "–ù–µ–±–µ–∑–ø–µ—á–Ω–∏–π –¥–æ–º–µ–Ω: #{uri.host}"
            end
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—É (—Ç—ñ–ª—å–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ HTTPS –ø–æ—Ä—Ç–∏)
            unless [443, nil].include?(uri.port)
              raise SecurityError, "–ù–µ–±–µ–∑–ø–µ—á–Ω–∏–π –ø–æ—Ä—Ç: #{uri.port}"
            end
            
            true
            
          rescue => e
            puts "‚ùå Security validation failed: #{e.message}"
            false
          end
        end
        
        # –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä
        # @param base_url [String] –ë–∞–∑–æ–≤–∏–π URL —Å–µ—Ä–≤–µ—Ä–∞
        # @return [Hash] { name: String, version: String, status: String }
        def self.server_info(base_url)
          begin
            uri = URI(base_url + '/api/systems')
            
            # –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL
            return { name: 'Unknown', version: 'Unknown', status: 'Invalid URL' } unless validate_url(uri.to_s)
            
            # –ó–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
            http = Net::HTTP.new(uri.host, uri.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_PEER
            http.read_timeout = 5
            http.open_timeout = 5
            
            response = http.get(uri.path)
            
            if response.code.to_i == 200
              data = JSON.parse(response.body, symbolize_names: true)
              {
                name: data[:name] || 'ProGran3 Server',
                version: data[:version] || 'Unknown',
                status: 'Online'
              }
            else
              {
                name: 'ProGran3 Server',
                version: 'Unknown',
                status: "HTTP #{response.code}"
              }
            end
            
          rescue => e
            {
              name: 'ProGran3 Server',
              version: 'Unknown',
              status: "Error: #{e.message}"
            }
          end
        end
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î URL –≤ whitelist
        # @param url [String]
        # @return [Boolean]
        def self.is_whitelisted?(url)
          begin
            uri = URI(url)
            ALLOWED_DOMAINS.include?(uri.host)
          rescue
            false
          end
        end
        
        # –î–æ–¥–∞—Ç–∏ –¥–æ–º–µ–Ω –¥–æ whitelist (–¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è)
        # @param domain [String]
        def self.add_domain(domain)
          # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
          # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –¥–æ –∫–æ–Ω—Ñ—ñ–≥—É –∞–±–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        end
        
        # –í–∏–¥–∞–ª–∏—Ç–∏ –¥–æ–º–µ–Ω –∑ whitelist
        # @param domain [String]
        def self.remove_domain(domain)
          # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        end
      end
    end
  end
end

# === BACKWARD COMPATIBILITY ALIASES ===
# –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ —ñ—Å–Ω—É—é—á–∏–º –∫–æ–¥–æ–º
module ProGran3
  module Security
    # Alias –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
    ServerValidator = System::Utils::EndpointValidator
  end
end

# === –¢–ï–°–¢–£–í–ê–ù–ù–Ø ===
if __FILE__ == $0
  puts "üß™ –ë–∞–∑–æ–≤–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è Endpoint Validator..."
  
  # –¢–µ—Å—Ç 1: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–æ–∑–≤–æ–ª–µ–Ω–æ–≥–æ URL
  puts "\nüìù –¢–µ—Å—Ç 1: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–æ–∑–≤–æ–ª–µ–Ω–æ–≥–æ URL..."
  valid_url = 'https://server-hbf7li0u7-provis3ds-projects.vercel.app/api/licenses'
  result1 = ProGran3::System::Utils::EndpointValidator.validate_url(valid_url)
  puts "   #{result1 ? '‚úÖ PASSED' : '‚ùå FAILED'}"
  
  # –¢–µ—Å—Ç 2: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ–≥–æ URL
  puts "\nüìù –¢–µ—Å—Ç 2: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ–≥–æ URL..."
  invalid_url = 'http://evil-server.com/api/licenses'
  result2 = ProGran3::System::Utils::EndpointValidator.validate_url(invalid_url)
  puts "   #{!result2 ? '‚úÖ PASSED' : '‚ùå FAILED'}"
  
  # –¢–µ—Å—Ç 3: –í–∞–ª—ñ–¥–∞—Ü—ñ—è localhost
  puts "\nüìù –¢–µ—Å—Ç 3: –í–∞–ª—ñ–¥–∞—Ü—ñ—è localhost..."
  localhost_url = 'https://localhost:3000/api/licenses'
  result3 = ProGran3::System::Utils::EndpointValidator.validate_url(localhost_url)
  puts "   #{!result3 ? '‚úÖ PASSED' : '‚ùå FAILED'}"
  
  # –¢–µ—Å—Ç 4: –í–∞–ª—ñ–¥–∞—Ü—ñ—è IP –∞–¥—Ä–µ—Å–∏
  puts "\nüìù –¢–µ—Å—Ç 4: –í–∞–ª—ñ–¥–∞—Ü—ñ—è IP –∞–¥—Ä–µ—Å–∏..."
  ip_url = 'https://192.168.1.1/api/licenses'
  result4 = ProGran3::System::Utils::EndpointValidator.validate_url(ip_url)
  puts "   #{!result4 ? '‚úÖ PASSED' : '‚ùå FAILED'}"
  
  # –¢–µ—Å—Ç 5: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É
  puts "\nüìù –¢–µ—Å—Ç 5: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É..."
  evil_url = 'https://evil-server.com/api/licenses'
  result5 = ProGran3::System::Utils::EndpointValidator.validate_url(evil_url)
  puts "   #{!result5 ? '‚úÖ PASSED' : '‚ùå FAILED'}"
  
  # –¢–µ—Å—Ç 6: Server info
  puts "\nüìù –¢–µ—Å—Ç 6: Server info..."
  info = ProGran3::System::Utils::EndpointValidator.server_info('https://server-hbf7li0u7-provis3ds-projects.vercel.app')
  puts "   ‚úÖ PASSED"
  
  puts "\n‚úÖ –ë–∞–∑–æ–≤–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
end
