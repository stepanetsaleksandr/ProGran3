# proGran3/carousel/carousel_manager.rb
# –°–ø—Ä–æ—â–µ–Ω–∏–π –º–æ–¥—É–ª—å –∫–∞—Ä—É—Å–µ–ª—ñ - —Ç—ñ–ª—å–∫–∏ –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∞

require 'json'

module ProGran3
  module Carousel
    class CarouselManager
      
      # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª–∞—Å—É
      def initialize
        @carousel_states = {}
      end
      
      # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ä—É—Å–µ–ª—ñ (—Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è)
      def initialize_carousel(carousel_id, model_list = [])
        @carousel_states[carousel_id] = {
          index: 0,
          models: model_list,
          loaded_previews: {}
        }
        
        puts "üé® –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∫–∞—Ä—É—Å–µ–ª—å: #{carousel_id}"
        puts "üì¶ –ú–æ–¥–µ–ª–µ–π: #{model_list.length}"
        
        true
      end
      
      # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–¥–µ–ª—ñ
      def get_current_model(carousel_id)
        state = @carousel_states[carousel_id]
        return nil unless state
        
        models = state[:models]
        index = state[:index]
        
        models[index] if models && index < models.length
      end
      
      # –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –º–æ–¥–µ–ª—ñ
      def next_model(carousel_id)
        state = @carousel_states[carousel_id]
        return false unless state
        
        models = state[:models]
        return false unless models && models.length > 0
        
        state[:index] = (state[:index] + 1) % models.length
        puts "‚û°Ô∏è –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –º–æ–¥–µ–ª—ñ: #{get_current_model(carousel_id)}"
        
        true
      end
      
      # –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó –º–æ–¥–µ–ª—ñ
      def previous_model(carousel_id)
        state = @carousel_states[carousel_id]
        return false unless state
        
        models = state[:models]
        return false unless models && models.length > 0
        
        state[:index] = (state[:index] - 1) % models.length
        puts "‚¨ÖÔ∏è –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –º–æ–¥–µ–ª—ñ: #{get_current_model(carousel_id)}"
        
        true
      end
      
      # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–¥–µ–ª—ñ
      def generate_preview(carousel_id, category)
        state = @carousel_states[carousel_id]
        return nil unless state
        
        current_model = get_current_model(carousel_id)
        return nil unless current_model
        
        component_path = "#{category}/#{current_model}"
        
        puts "üé® –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –¥–ª—è: #{component_path}"
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –º–æ–¥—É–ª—å –ø—Ä–µ–≤—å—é
        preview_path = ProGran3.extract_skp_preview(component_path, 256)
        
        if preview_path
          state[:loaded_previews][current_model] = preview_path
          puts "‚úÖ –ü—Ä–µ–≤—å—é –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: #{File.basename(preview_path)}"
          return preview_path
        else
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é"
          return nil
        end
      end
      
      # –û—Ç—Ä–∏–º–∞–Ω–Ω—è base64 –ø—Ä–µ–≤—å—é
      def get_preview_base64(carousel_id, category)
        state = @carousel_states[carousel_id]
        return nil unless state
        
        current_model = get_current_model(carousel_id)
        return nil unless current_model
        
        component_path = "#{category}/#{current_model}"
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –º–æ–¥—É–ª—å –ø—Ä–µ–≤—å—é
        base64_data = ProGran3.get_preview_base64(component_path, 256)
        
        if base64_data
          puts "‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ base64 –ø—Ä–µ–≤—å—é –¥–ª—è: #{current_model}"
          return base64_data
        else
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è base64 –ø—Ä–µ–≤—å—é"
          return nil
        end
      end
      
      # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–¥–µ–ª—ñ –¥–æ —Å—Ü–µ–Ω–∏
      def add_current_model(carousel_id, category)
        state = @carousel_states[carousel_id]
        return false unless state
        
        current_model = get_current_model(carousel_id)
        return false unless current_model
        
        puts "‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ –¥–æ —Å—Ü–µ–Ω–∏: #{current_model}"
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –º–µ—Ç–æ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
        ProGran3.insert_component(category, current_model)
        
        true
      end
      
      # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–∞—Ä—É—Å–µ–ª—å
      def get_carousel_info(carousel_id)
        state = @carousel_states[carousel_id]
        return nil unless state
        
        current_model = get_current_model(carousel_id)
        
        {
          id: carousel_id,
          current_model: current_model,
          current_index: state[:index],
          total_models: state[:models].length
        }
      end
      
      # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∫–∞—Ä—É—Å–µ–ª–µ–π
      def get_all_carousels
        @carousel_states.keys.map do |carousel_id|
          get_carousel_info(carousel_id)
        end.compact
      end
      
      # –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥—É–ª—è
      def test_module
        puts "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥—É–ª—è –∫–∞—Ä—É—Å–µ–ª—ñ..."
        
        # –¢–µ—Å—Ç—É—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
        test_models = ['stele_100x50x8.skp', 'stele_120x60x8.skp', 'stele_80x40x5.skp']
        success = initialize_carousel('test_steles', test_models)
        
        if success
          puts "‚úÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞"
          
          # –¢–µ—Å—Ç—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
          info = get_carousel_info('test_steles')
          puts "üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: #{info}"
          
          # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥
          next_model('test_steles')
          info = get_carousel_info('test_steles')
          puts "üìä –ü—ñ—Å–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É: #{info}"
          
          puts "‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
        else
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó"
        end
      end
    end
  end
end
