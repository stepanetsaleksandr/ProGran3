# progran3/ui.rb
require 'json'
require_relative 'validation'

module ProGran3
  module UI
    extend self

    def show_dialog
      puts "üì± –í—ñ–¥–∫—Ä–∏—Ç—Ç—è UI ProGran3..."
      
      # –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –±—É–¥–µ –∑–∞–ø—É—â–µ–Ω–æ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è UI
      
      html_path = File.join(File.dirname(__FILE__), "web", "index.html")
      categories = {
        stands: Dir.glob(File.join(ProGran3::ASSETS_PATH, "stands", "*.skp")).map { |f| File.basename(f) },
        steles: Dir.glob(File.join(ProGran3::ASSETS_PATH, "steles", "*.skp")).map { |f| File.basename(f) },
        flowerbeds: Dir.glob(File.join(ProGran3::ASSETS_PATH, "flowerbeds", "*.skp")).map { |f| File.basename(f) },
        gravestones: Dir.glob(File.join(ProGran3::ASSETS_PATH, "gravestones", "*.skp")).map { |f| File.basename(f) },
        pavement_tiles: Dir.glob(File.join(ProGran3::ASSETS_PATH, "pavement_tiles", "*.skp")).map { |f| File.basename(f) },
        fence_decor: Dir.glob(File.join(ProGran3::ASSETS_PATH, "fence_decor", "*.skp")).map { |f| File.basename(f) },
      }

      if @dialog && @dialog.visible?
        # –ó—É–ø–∏–Ω—è—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –¥—ñ–∞–ª–æ–≥—É
        # –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ UI
        puts "üìä –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏"
        @dialog.close
        @dialog = nil
        puts "üì± UI ProGran3 –∑–∞–∫—Ä–∏—Ç–æ"
      end
      
      @dialog ||= ::UI::HtmlDialog.new({
          :dialog_title => "proGran –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä",
          :preferences_key => "com.progran.ui",
          :scrollable => true,
          :resizable => true,
          :width => 420,
          :height => 850,
          :min_width => 350,
          :min_height => 600
      })

      @dialog.set_file(html_path)

      @dialog.add_action_callback("ready") do |d, _|
        puts "üì± UI –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ - –∑–∞–ø—É—Å–∫ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è heartbeat..."
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–ª–∞–≥—ñ–Ω –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if $plugin_blocked
          puts "üö´ –ü–ª–∞–≥—ñ–Ω –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π - –ø–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è"
          @dialog.execute_script("showBlockingCard();")
        else
          puts "‚úÖ –ü–ª–∞–≥—ñ–Ω –∞–∫—Ç–∏–≤–Ω–∏–π - –∑–∞–ø—É—Å–∫–∞—î–º–æ –Ω–æ—Ä–º–∞–ª—å–Ω—É —Ä–æ–±–æ—Ç—É"
        end
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è UI
        begin
          ProGran3.start_tracking
          puts "‚úÖ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è heartbeat –∑–∞–ø—É—â–µ–Ω–æ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è UI"
        rescue => e
          puts "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è: #{e.message}"
        end
        
        @dialog.execute_script("loadModelLists(#{categories.to_json});")
      end
      
      # Callback –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –¥—ñ–∞–ª–æ–≥—É (–≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏)
      @dialog.set_on_closed {
        puts "üì± –ó–∞–∫—Ä–∏—Ç—Ç—è UI ProGran3..."
        puts "üìä –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–¥–æ–≤–∂—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ"
      }

      # Callback'–∏ –¥–ª—è JavaScript (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ CallbackManager)
      @dialog.add_action_callback("add_foundation") do |dialog, depth, width, height|
        CallbackManager.add_foundation_callback(dialog, depth, width, height)
      end

      @dialog.add_action_callback("add_stand") do |dialog, height, width, depth, gaps = false, gaps_height = 0, gaps_width = 0, gaps_depth = 0|
        CallbackManager.add_stand_callback(dialog, height, width, depth, gaps, gaps_height, gaps_width, gaps_depth)
      end

      @dialog.add_action_callback("add_tiles") do |dialog, type, *params|
        CallbackManager.add_tiles_callback(dialog, type, *params)
      end
      
      @dialog.add_action_callback("add_side_cladding") do |dialog, thickness|
        CallbackManager.add_cladding_callback(dialog, thickness)
      end
      
             # Callback –¥–ª—è –≤—ñ–¥–º–æ—Å—Ç–∫–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ CallbackManager)
       @dialog.add_action_callback("add_blind_area_uniform") do |dialog, width, thickness|
         CallbackManager.add_blind_area_callback(dialog, thickness, "uniform", width)
       end

       @dialog.add_action_callback("add_blind_area_custom") do |dialog, north, south, east, west, thickness|
         CallbackManager.add_blind_area_callback(dialog, thickness, "custom", north, south, east, west)
       end


      @dialog.add_action_callback("add_model") do |dialog, category, filename, stele_type = nil, stele_distance = nil, central_detail = false, central_detail_width = 200, central_detail_depth = 50, central_detail_height = 1200|
        CallbackManager.add_model_callback(dialog, category, filename, stele_type, stele_distance, central_detail, central_detail_width, central_detail_depth, central_detail_height)
      end
      
      # Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—ñ–≤ —Å—Ç–µ–ª–∏
      @dialog.add_action_callback("get_stele_dimensions") do |dialog|
        CallbackManager.get_stele_dimensions_callback(@dialog)
      end
      
      # Callback –¥–ª—è –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è —Å—Ç–µ–ª–∏
      @dialog.add_action_callback("scale_stele") do |dialog, scale_x, scale_y, scale_z|
        CallbackManager.scale_stele_callback(dialog, scale_x, scale_y, scale_z)
      end
      
      # Callback –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è —Å—Ç–µ–ª–∏
      @dialog.add_action_callback("scale_stele_alternative") do |dialog, new_width, new_height, new_depth|
        CallbackManager.scale_stele_alternative_callback(dialog, new_width, new_height, new_depth)
      end
      
      @dialog.add_action_callback("create_central_detail") do |dialog, width, depth, height|
        CallbackManager.create_central_detail_callback(dialog, width, depth, height)
      end
      
      @dialog.add_action_callback("delete_central_detail") do |dialog|
        CallbackManager.delete_central_detail_callback(dialog)
      end
      
      @dialog.add_action_callback("add_fence_decor") do |dialog, filename|
        CallbackManager.add_fence_decor_callback(dialog, filename)
      end
       
      # Callback'–∏ –¥–ª—è –æ–≥–æ—Ä–æ–∂—ñ
      @dialog.add_action_callback("add_fence_corner") do |dialog, post_height, post_width, post_depth, side_height, side_length, side_thickness, decorative_size|
        CallbackManager.add_fence_corner_callback(dialog, post_height, post_width, post_depth, side_height, side_length, side_thickness, decorative_size)
      end
      
      @dialog.add_action_callback("add_fence_perimeter") do |dialog, post_height, post_width, post_depth, north_count, south_count, east_west_count, decorative_height, decorative_thickness|
        CallbackManager.add_fence_perimeter_callback(dialog, post_height, post_width, post_depth, north_count, south_count, east_west_count, decorative_height, decorative_thickness)
      end
      
      @dialog.add_action_callback("add_lamp") do |dialog, category, filename, position|
        CallbackManager.add_lamp_callback(dialog, category, filename, position)
      end


      @dialog.add_action_callback("reload_plugin") do |dialog, _|
        # –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
        Validation.validate!(true, "–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞", "UI")
        
        dialog.close
        ProGran3.reload
        ProGran3::UI.show_dialog
      end

      # Callback –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π (—É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ –∑ .skp —Ñ–∞–π–ª—ñ–≤)

      @dialog.add_action_callback("generate_preview_image") do |dialog, component_path|
        # –í–∞–ª—ñ–¥–∞—Ü—ñ—è —à–ª—è—Ö—É –¥–æ —Ñ–∞–π–ª—É
        file_result = Validation.validate_file_path(component_path, "UI")
        unless file_result.valid
          ErrorHandler.handle_error(
            Validation::ValidationError.new("–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Ñ–∞–π–ª—É –ø—Ä–µ–≤—å—é: #{file_result.error_messages.join(', ')}"),
            "UI",
            "generate_preview_image"
          )
          return false
        end
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –µ–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –¥–ª—è .skp —Ñ–∞–π–ª—ñ–≤
        result = ProGran3.extract_skp_preview(component_path)
        puts "‚úÖ –ü—Ä–µ–≤—å—é –≤–∏—Ç—è–≥–Ω—É—Ç–æ: #{result}" if result
      end

      @dialog.add_action_callback("generate_web_preview") do |dialog, component_path|
        puts "üîç generate_web_preview callback –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è: #{component_path}"
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è base64
        base64_data = ProGran3.get_preview_base64(component_path, 256)
        
        if base64_data
          puts "‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ base64 –¥–∞–Ω—ñ, –¥–æ–≤–∂–∏–Ω–∞: #{base64_data.length}"
          puts "üîÑ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –≤ JavaScript..."
          
          # –ï–∫—Ä–∞–Ω—É—î–º–æ –æ–¥–∏–Ω–∞—Ä–Ω—ñ –ª–∞–ø–∫–∏ –≤ base64_data
          escaped_base64 = base64_data.gsub("'", "\\'")
          
          script = "receiveWebPreview('#{component_path}', '#{escaped_base64}');"
          puts "üìù JavaScript —Å–∫—Ä–∏–ø—Ç: #{script[0..100]}..." if script.length > 100
          
          @dialog.execute_script(script)
          puts "‚úÖ –°–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω–∞–Ω–æ"
        else
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é –¥–ª—è: #{component_path}"
          @dialog.execute_script("handlePreviewError('#{component_path}', '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é');")
        end
      end

      # –†–µ—î—Å—Ç—Ä—É—î–º–æ callback'–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è –∫–∞—Ä—É—Å–µ–ª—ñ
      @carousel_ui = ProGran3::Carousel::CarouselUI.new
      @carousel_ui.register_callbacks(@dialog)
      
      # –î–æ–¥–∞—î–º–æ callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è HTML –∫–∞—Ä—É—Å–µ–ª—ñ
      @dialog.add_action_callback("get_carousel_html") do |dialog, carousel_id|
        html = @carousel_ui.get_carousel_html(carousel_id)
        dialog.execute_script("receiveCarouselHtml('#{carousel_id}', `#{html}`);")
      end

      # Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –º–æ–¥–µ–ª—ñ
             # –ú–µ—Ç–æ–¥–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ (–¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –¥–æ CallbackManager)
       def self.get_blind_area_params
         CallbackManager.get_blind_area_params
       end
       
       def self.get_tiles_params
         CallbackManager.get_tiles_params
       end
       
       def self.get_cladding_params
         CallbackManager.get_cladding_params
       end
       
       def self.get_foundation_params
         CallbackManager.get_foundation_params
       end
      
      @dialog.add_action_callback("get_model_status") do |dialog, _|
        puts "üîç get_model_status callback –≤–∏–∫–ª–∏–∫–∞–Ω–æ"
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–¥–µ–ª—å SketchUp
        model = Sketchup.active_model
        status = {
          foundation: false,
          tiling: false,
          cladding: false,
          blindArea: false,
          stands: false,
          flowerbeds: false,
          gravestones: false,
          steles: false
        }
        
        if model
          # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ—à—É–∫—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
          def check_entities(entities, status)
            entities.each do |entity|
              if entity.is_a?(Sketchup::ComponentInstance)
                definition = entity.definition
                name = definition.name.downcase
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ–º–µ–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                if name == 'foundation'
                  status[:foundation] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç (–∫–æ–º–ø–æ–Ω–µ–Ω—Ç): #{name}"
                elsif name.include?('stand') || name.include?('–ø—ñ–¥—Å—Ç–∞–≤–∫–∞') || name.include?('–ø–æ–¥—Å—Ç–∞–≤–∫–∞')
                  status[:stands] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø—ñ–¥—Å—Ç–∞–≤–∫—É: #{name}"
                elsif name.include?('flowerbed') || name.include?('–∫–≤—ñ—Ç–Ω–∏–∫') || name.include?('—Ü–≤–µ—Ç–Ω–∏–∫')
                  status[:flowerbeds] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∫–≤—ñ—Ç–Ω–∏–∫: #{name}"
                elsif name.include?('gravestone') || name.include?('plate') || name.include?('–Ω–∞–¥–≥—Ä–æ–±–Ω–∞') || name.include?('–ø–ª–∏—Ç–∞')
                  status[:gravestones] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–∞–¥–≥—Ä–æ–±–Ω—É –ø–ª–∏—Ç—É: #{name}"
                elsif name.include?('stele') || name.include?('—Å—Ç–µ–ª–∞') || name.include?('—Å—Ç–µ–ª–ª–∞')
                  status[:steles] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–µ–ª—É: #{name}"
                elsif name.start_with?('blindarea_') || name.include?('–≤—ñ–¥–º–æ—Å—Ç–∫–∞') || name.include?('–æ—Ç–º–æ—Å—Ç–∫–∞')
                  status[:blindArea] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–º–æ—Å—Ç–∫—É: #{name}"
                end
              elsif entity.is_a?(Sketchup::Group)
                # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥—Ä—É–ø–∏
                check_entities(entity.entities, status)
                
                # –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–º'—è –≥—Ä—É–ø–∏
                group_name = entity.name.downcase
                if group_name.include?('tile') || group_name.include?('–ø–ª–∏—Ç–∫–∞')
                  status[:tiling] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–ª–∏—Ç–∫—É (–≥—Ä—É–ø–∞): #{group_name}"
                elsif group_name.include?('cladding') || group_name.include?('–æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è')
                  status[:cladding] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è (–≥—Ä—É–ø–∞): #{group_name}"
                elsif group_name.include?('blindarea') || group_name.include?('–≤—ñ–¥–º–æ—Å—Ç–∫–∞') || group_name.include?('–æ—Ç–º–æ—Å—Ç–∫–∞')
                  status[:blindArea] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–º–æ—Å—Ç–∫—É (–≥—Ä—É–ø–∞): #{group_name}"
                end
              elsif entity.is_a?(Sketchup::Edge) || entity.is_a?(Sketchup::Face)
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–µ–æ–º–µ—Ç—Ä—ñ—é –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É, –ø–ª–∏—Ç–∫–∏ —Ç–∞ –æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è
                if entity.layer
                  layer_name = entity.layer.name.downcase
                  if layer_name.include?('foundation') || layer_name.include?('—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç')
                    status[:foundation] = true
                    puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç (layer): #{layer_name}"
                  elsif layer_name.include?('tile') || layer_name.include?('–ø–ª–∏—Ç–∫–∞')
                    status[:tiling] = true
                    puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–ª–∏—Ç–∫—É (layer): #{layer_name}"
                  elsif layer_name.include?('cladding') || layer_name.include?('–æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è')
                    status[:cladding] = true
                    puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è (layer): #{layer_name}"
                  elsif layer_name.include?('blindarea') || layer_name.include?('–≤—ñ–¥–º–æ—Å—Ç–∫–∞') || layer_name.include?('–æ—Ç–º–æ—Å—Ç–∫–∞')
                    status[:blindArea] = true
                    puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–º–æ—Å—Ç–∫—É (layer): #{layer_name}"
                  end
                end
              end
            end
          end
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–æ–¥–µ–ª—ñ
          check_entities(model.active_entities, status)
          
          # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É, –ø–ª–∏—Ç–∫–∏ —Ç–∞ –æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è
          # –®—É–∫–∞—î–º–æ –∑–∞ —Ä–æ–∑–º—ñ—Ä–∞–º–∏ –∞–±–æ —ñ–Ω—à–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
          model.active_entities.each do |entity|
            if entity.is_a?(Sketchup::Group)
              # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥—Ä—É–ø–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ó—Ö —Ä–æ–∑–º—ñ—Ä—ñ–≤ –∞–±–æ —ñ–º–µ–Ω—ñ
              bounds = entity.bounds
              if bounds
                width = bounds.width
                height = bounds.height
                depth = bounds.depth
                
                # –§—É–Ω–¥–∞–º–µ–Ω—Ç –∑–∞–∑–≤–∏—á–∞–π –º–∞—î –≤–µ–ª–∏–∫—ñ —Ä–æ–∑–º—ñ—Ä–∏ —ñ –º–∞–ª—É –≤–∏—Å–æ—Ç—É
                if width > 800 && depth > 800 && height < 300
                  status[:foundation] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç (—Ä–æ–∑–º—ñ—Ä–∏): #{width}√ó#{depth}√ó#{height}"
                end
                
                # –ü–ª–∏—Ç–∫–∞ –∑–∞–∑–≤–∏—á–∞–π —Ç–æ–Ω–∫–∞ —ñ —à–∏—Ä–æ–∫–∞
                if height < 100 && width > 400 && depth > 400
                  status[:tiling] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–ª–∏—Ç–∫—É (—Ä–æ–∑–º—ñ—Ä–∏): #{width}√ó#{depth}√ó#{height}"
                end
                
                # –û–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è –∑–∞–∑–≤–∏—á–∞–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ
                if height > 150 && (width < 200 || depth < 200)
                  status[:cladding] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –æ–±–ª–∏—Ü—é–≤–∞–Ω–Ω—è (—Ä–æ–∑–º—ñ—Ä–∏): #{width}√ó#{depth}√ó#{height}"
                end
                
                # –í—ñ–¥–º–æ—Å—Ç–∫–∞ –∑–∞–∑–≤–∏—á–∞–π —à–∏—Ä–æ–∫–∞ —ñ —Ç–æ–Ω–∫–∞
                if height < 100 && (width > 600 || depth > 600)
                  status[:blindArea] = true
                  puts "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–º–æ—Å—Ç–∫—É (—Ä–æ–∑–º—ñ—Ä–∏): #{width}√ó#{depth}√ó#{height}"
                end
              end
            end
          end
        end
        
        puts "üìä –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª—ñ: #{status}"
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤ JavaScript
        script = "receiveModelStatus(#{status.to_json});"
        @dialog.execute_script(script)
        puts "‚úÖ –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ JavaScript"
      end
      
      # Callback –¥–ª—è –∑–º—ñ–Ω–∏ –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è
      @dialog.add_action_callback("change_unit") do |dialog, unit|
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤—É –æ–¥–∏–Ω–∏—Ü—é –≤ DimensionsManager
        success = DimensionsManager.set_current_unit(unit)
        
        if success
          ProGran3::Logger.info("–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞: #{unit}", "UI")
          true
        else
          ErrorHandler.handle_error(
            Validation::ValidationError.new("–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∞ –æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è: #{unit}"),
            "UI",
            "change_unit"
          )
          false
        end
      end
      
      # Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –æ–¥–∏–Ω–∏—Ü—ñ
      @dialog.add_action_callback("get_current_unit") do |dialog, _|
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –æ–¥–∏–Ω–∏—Ü—é (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –º–º)
        "mm"
      end
      



      # Callback –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É –ø—ñ–¥—Å—Ç–∞–≤–∫–∏
      @dialog.add_action_callback("update_stand_size") do |dialog, height, width, depth|
        CallbackManager.update_stand_size_callback(dialog, height, width, depth)
      end
      
      # Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø—ñ–¥—Å—Ç–∞–≤–æ–∫
      @dialog.add_action_callback("get_stands_list") do |dialog, _|
        stands_list = Dir.glob(File.join(ProGran3::ASSETS_PATH, "stands", "*.skp")).map { |f| File.basename(f) }
        ProGran3::Logger.info("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—ñ–¥—Å—Ç–∞–≤–æ–∫: #{stands_list.length} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤", "UI")
        stands_list
      end

      # –¢–µ—Å—Ç–æ–≤–∏–π callback –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
      @dialog.add_action_callback("test_preview_callback") do |action_context, size, quality|
        @dialog.execute_script("console.log('üß™ –¢–µ—Å—Ç–æ–≤–∏–π callback –ø—Ä–∞—Ü—é—î! size=#{size}, quality=#{quality}');")
        42
      end

      # Callback –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é –º–æ–¥–µ–ª—ñ
      @dialog.add_action_callback("generate_model_preview") do |action_context, size, quality|
        begin
          ProGran3::Logger.info("üîÑ Callback generate_model_preview –≤–∏–∫–ª–∏–∫–∞–Ω–æ", "UI")
          ProGran3::Logger.info("üì• –ü–∞—Ä–∞–º–µ—Ç—Ä–∏: size=#{size}, quality=#{quality}", "UI")
          
          result = generate_model_preview_callback(@dialog, size, quality)
          
          ProGran3::Logger.info("üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç callback: #{result.inspect}", "UI")
          
          # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JavaScript
          if result && result[:success]
            ProGran3::Logger.info("‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —É—Å–ø—ñ—à–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JavaScript", "UI")
            # –ï–∫—Ä–∞–Ω—É—î–º–æ –æ–¥–∏–Ω–∞—Ä–Ω—ñ –ª–∞–ø–∫–∏ –≤ base64 –¥–∞–Ω–∏—Ö
            escaped_data = result[:data].gsub("'", "\\'")
            script = "receiveModelPreview(#{result.to_json});"
            @dialog.execute_script(script)
            ProGran3::Logger.info("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–≤—å—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ JavaScript", "UI")
            ProGran3::Logger.info("üîÑ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ 1 (—É—Å–ø—ñ—Ö)", "UI")
            1
          else
            error_msg = result ? result[:error] : "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞"
            ProGran3::Logger.error("‚ùå –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É –≤ JavaScript: #{error_msg}", "UI")
            script = "handleModelPreviewError('#{error_msg}');"
            @dialog.execute_script(script)
            ProGran3::Logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–µ–≤—å—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ JavaScript: #{error_msg}", "UI")
            ProGran3::Logger.info("üîÑ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ 0 (–ø–æ–º–∏–ª–∫–∞)", "UI")
            0
          end
          
        rescue => e
          ProGran3::Logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ callback: #{e.message}", "UI")
          ProGran3::Logger.error("Stack trace: #{e.backtrace.join("\n")}", "UI")
          
          # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É –≤ JavaScript
          script = "handleModelPreviewError('–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: #{e.message}');"
          @dialog.execute_script(script)
          
          ProGran3::Logger.info("üîÑ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ 0 (–∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞)", "UI")
          0
        end
      end
      
      # –î–æ–¥–∞—î–º–æ callback –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
      add_blocking_status_callback(@dialog)

      @dialog.show
    end

    private

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–≤—å—é –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–¥–µ–ª—ñ
    def generate_model_preview_callback(dialog, size, quality)
      begin
        ProGran3::Logger.info("üé® –ü–æ—á–∞—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é –º–æ–¥–µ–ª—ñ", "UI")
        ProGran3::Logger.info("üìê –ü–∞—Ä–∞–º–µ—Ç—Ä–∏: —Ä–æ–∑–º—ñ—Ä=#{size}, —è–∫—ñ—Å—Ç—å=#{quality}", "UI")

        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤–∏–π –º–µ—Ç–æ–¥ –∑ SkpPreviewExtractor
        data_url = ProGran3::SkpPreviewExtractor.generate_current_model_preview(size, quality)
        
        if data_url
          ProGran3::Logger.success("‚úÖ –ü—Ä–µ–≤—å—é —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ", "UI")
          ProGran3::Logger.info("üìè –î–æ–≤–∂–∏–Ω–∞ base64 –¥–∞–Ω–∏—Ö: #{data_url.length}", "UI")
          
          result = {
            success: true,
            data: data_url,
            size: size.to_i,
            quality: quality,
            generated_at: Time.now.iso8601
          }
          
          ProGran3::Logger.info("üì§ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: #{result.keys.join(', ')}", "UI")
          return result
        else
          ProGran3::Logger.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—å—é", "UI")
          return { success: false, error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—å—é –º–æ–¥–µ–ª—ñ" }
        end

      rescue => e
        ProGran3::Logger.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é: #{e.message}", "UI")
        ProGran3::Logger.error("Stack trace: #{e.backtrace.join("\n")}", "UI")
        return { success: false, error: "–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—å—é: #{e.message}" }
      end
    end

    # Callback –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞
    def self.add_blocking_status_callback(dialog)
      dialog.add_action_callback("checkBlockingStatus") do |action_context, _|
        puts "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞..."
        
        begin
          # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–µ—Ç–æ–¥ send_test_heartbeat –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É
          result = ProGran3.send_test_heartbeat
          
          if result[:success]
            is_blocked = result[:blocked] || false
            puts "üì° –°—Ç–∞—Ç—É—Å –∑ —Å–µ—Ä–≤–µ—Ä–∞: #{is_blocked ? '–ó–ê–ë–õ–û–ö–û–í–ê–ù–û' : '–ê–ö–¢–ò–í–ù–ò–ô'}"
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JavaScript —á–µ—Ä–µ–∑ @dialog
            @dialog.execute_script("updateBlockingStatusFromServer(#{is_blocked});")
          else
            puts "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑ —Å–µ—Ä–≤–µ—Ä–∞: #{result[:error]}"
            @dialog.execute_script("debugLog('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É: #{result[:error]}', 'error');")
          end
        rescue => e
          puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è: #{e.message}"
          puts "‚ùå Backtrace: #{e.backtrace.join('\n')}"
          @dialog.execute_script("debugLog('‚ùå –ü–æ–º–∏–ª–∫–∞ Ruby callback: #{e.message}', 'error');")
        end
      end
    end
  end
end