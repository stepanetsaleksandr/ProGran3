# plugin/proGran3/security/TEST_HMAC.rb
# –¢–µ—Å—Ç HMAC –ø—ñ–¥–ø–∏—Å—ñ–≤

puts "=" * 80
puts "üß™ –¢–ï–°–¢: HMAC SIGNATURES"
puts "=" * 80
puts ""

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥—É–ª—å
begin
  require_relative 'api_client'
  require_relative 'hardware_fingerprint'
rescue LoadError => e
  puts "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤: #{e.message}"
  exit
end

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ HMAC –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ
puts "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
puts ""

hmac_enabled = !ProGran3::Security::ApiClient::SECRET_KEY.nil? && 
               !ProGran3::Security::ApiClient::SECRET_KEY.empty?

if hmac_enabled
  puts "‚úÖ HMAC –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –≤ plugin"
  puts "   SECRET_KEY: #{ProGran3::Security::ApiClient::SECRET_KEY[0..16]}..."
  puts ""
else
  puts "‚ö†Ô∏è HMAC –ù–ï –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –≤ plugin"
  puts ""
  puts "   SECRET_KEY = nil –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π"
  puts ""
  puts "   –©–æ–± —É–≤—ñ–º–∫–Ω—É—Ç–∏ HMAC:"
  puts "   1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ: plugin/proGran3/security/api_client.rb"
  puts "   2. –ó–Ω–∞–π–¥—ñ—Ç—å —Ä—è–¥–æ–∫ 23: SECRET_KEY = nil"
  puts "   3. –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞: SECRET_KEY = '–≤–∞—à-64-char-–∫–ª—é—á'"
  puts "   4. –¢–æ–π —Å–∞–º–∏–π –∫–ª—é—á –º–∞—î –±—É—Ç–∏ –≤ Vercel env vars"
  puts ""
  puts "   –î–µ—Ç–∞–ª—å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:"
  puts "   docs/development/HMAC_RATELIMIT_SETUP.md"
  puts ""
  puts "=" * 80
  puts "‚ö†Ô∏è –¢–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω–æ (HMAC –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ)"
  puts ""
  exit
end

# –û—Ç—Ä–∏–º—É—î–º–æ fingerprint
fp_data = ProGran3::Security::HardwareFingerprint.generate
fingerprint = fp_data[:fingerprint]

# –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
TEST_EMAIL = "hmac-test@progran3.com"
TEST_KEY = "PROGRAN3-2025-TEST-HMAC"

puts "üîê –¢–ï–°–¢ 1: –ó–∞–ø–∏—Ç –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º HMAC –ø—ñ–¥–ø–∏—Å–æ–º"
puts "-" * 80

result = ProGran3::Security::ApiClient.activate(TEST_EMAIL, TEST_KEY, fingerprint)

if result[:success]
  puts "‚úÖ Request –∑ HMAC –ø—ñ–¥–ø–∏—Å–æ–º: –£–°–ü–Ü–®–ù–û"
  puts "   –°–µ—Ä–≤–µ—Ä –ø—Ä–∏–π–Ω—è–≤ –∑–∞–ø–∏—Ç –∑ –ø—ñ–¥–ø–∏—Å–æ–º"
elsif result[:error] && result[:error].include?('Invalid or already activated')
  puts "‚úÖ Request –∑ HMAC –ø—ñ–¥–ø–∏—Å–æ–º: –£–°–ü–Ü–®–ù–û"
  puts "   (–∫–ª—é—á –≤–∂–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
elsif result[:error] && result[:error].include?('Invalid HMAC signature')
  puts "‚ùå –ü–û–ú–ò–õ–ö–ê: –ü—ñ–¥–ø–∏—Å –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–º"
  puts "   –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:"
  puts "   1. SECRET_KEY –≤ plugin != SECRET_KEY –≤ Vercel"
  puts "   2. HMAC_SECRET_KEY –Ω–µ –¥–æ–¥–∞–Ω–æ –≤ Vercel env vars"
  puts "   3. Vercel –Ω–µ redeploy –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è env vars"
else
  puts "‚ö†Ô∏è Request –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é: #{result[:error]}"
end

puts ""
puts "=" * 80
puts ""

# –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ —Å–µ—Ä–≤–µ—Ä –≤–∏–º–∞–≥–∞—î HMAC (—è–∫—â–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ)
puts "üîê –¢–ï–°–¢ 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó"
puts "-" * 80
puts ""

puts "   –í—ñ–¥–ø—Ä–∞–≤–∏–º–æ –∑–∞–ø–∏—Ç –ë–ï–ó HMAC –ø—ñ–¥–ø–∏—Å—É..."
puts "   (—Ç–∏–º—á–∞—Å–æ–≤–æ –≤–∏–º–∫–Ω–µ–º–æ SECRET_KEY)"
puts ""

# –¢–∏–º—á–∞—Å–æ–≤–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∫–ª—é—á
original_key = ProGran3::Security::ApiClient::SECRET_KEY

# –í–∏–º–∏–∫–∞—î–º–æ HMAC
ProGran3::Security::ApiClient.const_set(:SECRET_KEY, nil)

result_no_hmac = ProGran3::Security::ApiClient.activate(TEST_EMAIL, TEST_KEY, fingerprint)

# –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫–ª—é—á
ProGran3::Security::ApiClient.const_set(:SECRET_KEY, original_key)

if result_no_hmac[:success]
  puts "‚ö†Ô∏è –£–í–ê–ì–ê: –°–µ—Ä–≤–µ—Ä –ø—Ä–∏–π–Ω—è–≤ –∑–∞–ø–∏—Ç –ë–ï–ó HMAC –ø—ñ–¥–ø–∏—Å—É"
  puts ""
  puts "   –¶–µ –æ–∑–Ω–∞—á–∞—î:"
  puts "   - HMAC_SECRET_KEY –Ω–µ –¥–æ–¥–∞–Ω–æ –≤ Vercel env vars"
  puts "   - –ê–ë–û Vercel –Ω–µ redeploy –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è"
  puts ""
  puts "   –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –≤ backward compatible —Ä–µ–∂–∏–º—ñ"
  puts "   (–ø—Ä–∏–π–º–∞—î –∑–∞–ø–∏—Ç–∏ –∑ —ñ –±–µ–∑ HMAC)"
elsif result_no_hmac[:error] && result_no_hmac[:error].include?('HMAC signature required')
  puts "‚úÖ –¢–ï–°–¢ –ü–†–û–ô–®–û–í: –°–µ—Ä–≤–µ—Ä –≤–∏–º–∞–≥–∞—î HMAC –ø—ñ–¥–ø–∏—Å"
  puts "   –ó–∞–ø–∏—Ç –±–µ–∑ –ø—ñ–¥–ø–∏—Å—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ!)"
else
  puts "‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç: #{result_no_hmac[:error]}"
end

puts ""
puts "=" * 80
puts ""

# –ü—ñ–¥—Å—É–º–æ–∫
puts "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò –¢–ï–°–¢–£–í–ê–ù–ù–Ø:"
puts ""

if result[:success] || (result[:error] && result[:error].include?('already activated'))
  puts "   Plugin HMAC: ‚úÖ –ü—Ä–∞—Ü—é—î (–ø—ñ–¥–ø–∏—Å–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è)"
else
  puts "   Plugin HMAC: ‚ùå –ü—Ä–æ–±–ª–µ–º–∞"
end

if result_no_hmac[:error] && result_no_hmac[:error].include?('HMAC signature required')
  puts "   Server HMAC: ‚úÖ –ü—Ä–∞—Ü—é—î (–ø—ñ–¥–ø–∏—Å–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è)"
  puts ""
  puts "   üîí Security: 9/10 (Maximum!)"
else
  puts "   Server HMAC: ‚ö†Ô∏è –ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ (backward compatible mode)"
  puts ""
  puts "   –î–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞—Ö–∏—Å—Ç—É –¥–æ–¥–∞–π—Ç–µ HMAC_SECRET_KEY –≤ Vercel:"
  puts "   docs/development/HMAC_RATELIMIT_SETUP.md"
  puts ""
  puts "   üîí Security: 8.5/10"
end

puts ""
puts "=" * 80
puts "‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
puts ""

