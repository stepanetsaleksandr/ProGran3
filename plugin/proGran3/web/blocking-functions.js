// ========== BLOCKING FUNCTIONS ==========

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
let pluginBlocked = false;

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
function showBlockingCard() {
  console.log('üîí showBlockingCard() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ heartbeat');
  debugLog('üîí –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', 'warning');
  
  const blockingCard = document.getElementById('blocking-card');
  const tabsNavigation = document.querySelector('.tabs-navigation');
  const tabContents = document.querySelectorAll('.tab-content');
  const specificationPanel = document.getElementById('specification-panel');

  if (blockingCard) {
    blockingCard.style.display = 'block';
  }
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç–∞–±—ñ–≤
  if (tabsNavigation) {
    tabsNavigation.style.display = 'none';
  }
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤—Å—ñ —Ç–∞–±–∏
  tabContents.forEach(tab => {
    tab.style.display = 'none';
  });
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–∞–Ω–µ–ª—å —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  if (specificationPanel) {
    specificationPanel.style.display = 'none';
  }
  
  pluginBlocked = true;
  debugLog('üîí –ü–æ–∫–∞–∑–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'warning');
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
function hideBlockingCard() {
  console.log('‚úÖ hideBlockingCard() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ heartbeat');
  debugLog('‚úÖ –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', 'success');
  
  const blockingCard = document.getElementById('blocking-card');
  const tabsNavigation = document.querySelector('.tabs-navigation');
  const tabContents = document.querySelectorAll('.tab-content');
  const specificationPanel = document.getElementById('specification-panel');

  if (blockingCard) {
    blockingCard.style.display = 'none';
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç–∞–±—ñ–≤
  if (tabsNavigation) {
    tabsNavigation.style.display = 'flex';
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–±
  const activeTabButton = document.querySelector('.tabs-navigation .tab-button.active');
  if (activeTabButton) {
    const activeTabId = activeTabButton.dataset.tab + '-tab';
    const activeTabContent = document.getElementById(activeTabId);
    if (activeTabContent) {
      activeTabContent.style.display = 'block';
    }
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–Ω–µ–ª—å —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  if (specificationPanel) {
    specificationPanel.style.display = 'block';
  }
  
  pluginBlocked = false;
  debugLog('üîì –ü—Ä–∏—Ö–æ–≤–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'info');
}

// –í—ñ–¥–∫—Ä–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–∫—É–ø–∫–∏
function openPurchasePage() {
  debugLog('üõí –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–∫—É–ø–∫–∏', 'info');
  // –¢—É—Ç –±—É–¥–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏
  window.open('https://progran3.com/purchase', '_blank');
}

// –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
function retryConnection() {
  debugLog('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'info');
  checkServerBlockingStatus();
}


// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –ø–ª–∞–≥—ñ–Ω
function isPluginBlocked() {
  return pluginBlocked;
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ Ruby callback
function checkServerBlockingStatus() {
  debugLog('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞...', 'info');
  
  if (window.sketchup && window.sketchup.checkBlockingStatus) {
    window.sketchup.checkBlockingStatus();
  } else {
    debugLog('‚ùå Ruby callback checkBlockingStatus –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', 'error');
  }
}

// –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å–µ—Ä–≤–µ—Ä–∞
function updateBlockingStatusFromServer(isBlocked) {
  debugLog(`üì° –û—Ç—Ä–∏–º–∞–Ω–æ —Å—Ç–∞—Ç—É—Å –∑ —Å–µ—Ä–≤–µ—Ä–∞: ${isBlocked ? '–ó–ê–ë–õ–û–ö–û–í–ê–ù–û' : '–ê–ö–¢–ò–í–ù–ò–ô'}`, isBlocked ? 'warning' : 'success');
  
  if (isBlocked) {
    showBlockingCard();
  } else {
    hideBlockingCard();
  }
}
