// ========== BLOCKING FUNCTIONS ==========

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
let pluginBlocked = false;

// ========== –õ–Ü–¶–ï–ù–ó–Ü–ô–ù–Ü –§–£–ù–ö–¶–Ü–á ==========

// –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó
function activateLicense() {
  const email = document.getElementById('email-input').value.trim();
  const licenseKey = document.getElementById('license-key-input').value.trim();
  
  if (!email) {
    showLicenseMessage('‚ùå –í–≤–µ–¥—ñ—Ç—å email', 'error');
    return;
  }
  
  if (!licenseKey) {
    showLicenseMessage('‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á –ª—ñ—Ü–µ–Ω–∑—ñ—ó', 'error');
    return;
  }
  
  if (!isValidEmail(email)) {
    showLicenseMessage('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email', 'error');
    return;
  }
  
  const activateBtn = document.getElementById('activate-license-btn');
  const originalText = activateBtn.textContent;
  
  activateBtn.textContent = '–ê–∫—Ç–∏–≤–∞—Ü—ñ—è...';
  activateBtn.disabled = true;
  
  debugLog('üîê –°–ø—Ä–æ–±–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ª—ñ—Ü–µ–Ω–∑—ñ—ó: ' + email + ' + ' + licenseKey.substring(0, 8) + '...', 'info');
  
  if (window.sketchup && window.sketchup.register_license_with_email) {
    try {
      const result = window.sketchup.register_license_with_email(email, licenseKey);
      
      if (result && result.success) {
        showLicenseMessage('‚úÖ –õ—ñ—Ü–µ–Ω–∑—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞!', 'success');
        setTimeout(() => {
          hideLicenseCard();
          debugLog('üîÑ –û–Ω–æ–≤–ª—é—î–º–æ UI –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ª—ñ—Ü–µ–Ω–∑—ñ—ó...', 'info');
          updateLicenseStatusInUI();
          checkServerBlockingStatus();
        }, 1000);
      } else {
        const errorMsg = result ? result.error : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞';
        showLicenseMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: ' + errorMsg, 'error');
        activateBtn.textContent = originalText;
        activateBtn.disabled = false;
      }
    } catch (error) {
      showLicenseMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: ' + error.message, 'error');
      activateBtn.textContent = originalText;
      activateBtn.disabled = false;
    }
  } else {
    showLicenseMessage('‚ùå –ü–ª–∞–≥—ñ–Ω –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π', 'error');
    activateBtn.textContent = originalText;
    activateBtn.disabled = false;
  }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ –≤–≤–æ–¥—É email
function showEmailDialog(licenseKey) {
  const emailDialog = document.createElement('div');
  emailDialog.id = 'email-dialog';
  emailDialog.innerHTML = `
    <div class="email-dialog-overlay">
      <div class="email-dialog-content">
        <h3>üìß –í–≤–µ–¥—ñ—Ç—å email –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó</h3>
        <p>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ª—ñ—Ü–µ–Ω–∑—ñ—ó –ø–æ—Ç—Ä—ñ–±–µ–Ω –≤–∞—à email</p>
        <input type="email" id="email-input" placeholder="your@email.com" />
        <div class="email-dialog-buttons">
          <button onclick="registerLicenseWithEmail('${licenseKey}')" class="btn-primary">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏</button>
          <button onclick="hideEmailDialog()" class="btn-secondary">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
        </div>
      </div>
    </div>
  `;
  
  document.body.appendChild(emailDialog);
  debugLog('üìß –ü–æ–∫–∞–∑–∞–Ω–æ –¥—ñ–∞–ª–æ–≥ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è email', 'info');
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ email
function hideEmailDialog() {
  const emailDialog = document.getElementById('email-dialog');
  if (emailDialog) {
    emailDialog.remove();
  }
}

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó –∑ email
function registerLicenseWithEmail(licenseKey) {
  const email = document.getElementById('email-input').value.trim();
  
  if (!email) {
    showLicenseMessage('‚ùå –í–≤–µ–¥—ñ—Ç—å email', 'error');
    return;
  }
  
  if (!isValidEmail(email)) {
    showLicenseMessage('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email', 'error');
    return;
  }
  
  debugLog('üîê –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó: ' + email + ' + ' + licenseKey.substring(0, 8) + '...', 'info');
  
  if (window.sketchup && window.sketchup.register_license_with_email) {
    try {
      const result = window.sketchup.register_license_with_email(email, licenseKey);
      
      if (result && result.success) {
        showLicenseMessage('‚úÖ –õ—ñ—Ü–µ–Ω–∑—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞!', 'success');
        hideEmailDialog();
        hideLicenseCard();
        updateLicenseStatusInUI();
        checkServerBlockingStatus();
      } else {
        const errorMsg = result ? result.error : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞';
        showLicenseMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ' + errorMsg, 'error');
      }
    } catch (error) {
      showLicenseMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: ' + error.message, 'error');
    }
  } else {
    showLicenseMessage('‚ùå –ü–ª–∞–≥—ñ–Ω –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π', 'error');
  }
}

// –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –ª—ñ—Ü–µ–Ω–∑—ñ—ó –≤ UI
function updateLicenseStatusInUI() {
  debugLog('üîÑ updateLicenseStatusInUI –≤–∏–∫–ª–∏–∫–∞–Ω–æ', 'info');
  
  if (window.sketchup && window.sketchup.get_license_info) {
    try {
      const result = window.sketchup.get_license_info();
      debugLog('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç get_license_info: ' + JSON.stringify(result), 'info');
      
      if (result && result.success) {
        const licenseInfo = result.license_info;
        const email = result.email;
        debugLog('‚úÖ –û–Ω–æ–≤–ª—é—î–º–æ UI –∑ email: ' + email, 'info');
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ UI
        if (email) {
          document.getElementById('license-status').innerHTML = `
            <div class="license-status-active">
              <span class="status-icon">‚úÖ</span>
              <span class="status-text">–õ—ñ—Ü–µ–Ω–∑—ñ—è –∞–∫—Ç–∏–≤–Ω–∞</span>
              <div class="license-details">
                <div>Email: ${email}</div>
                <div>–ö–ª—é—á: ${licenseInfo.license_key}</div>
              </div>
            </div>
          `;
          
          // –û–Ω–æ–≤–ª—é—î–º–æ footer –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
          updateLicenseFooter(email, licenseInfo.license_key);
        }
      }
    } catch (error) {
      debugLog('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é: ' + error.message, 'error');
    }
  }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
function checkServerBlockingStatus() {
  debugLog('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ...', 'info');
  
  if (window.sketchup && window.sketchup.check_server_status) {
    try {
      window.sketchup.check_server_status();
    } catch (error) {
      debugLog('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É: ' + error.message, 'error');
    }
  }
}

// –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
function isValidEmail(email) {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
function showLicenseMessage(message, type = 'info') {
  const messageDiv = document.getElementById('license-message');
  if (messageDiv) {
    messageDiv.innerHTML = message;
    messageDiv.className = `license-message ${type}`;
    messageDiv.style.display = 'block';
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      messageDiv.style.display = 'none';
    }, 5000);
  }
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó
function hideLicenseCard() {
  const blockingCard = document.getElementById('blocking-card');
  if (blockingCard) {
    blockingCard.style.display = 'none';
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π UI
  const tabsNavigation = document.querySelector('.tabs-navigation');
  const tabContents = document.querySelectorAll('.tab-content');
  const specificationPanel = document.getElementById('specification-panel');
  
  if (tabsNavigation) {
    tabsNavigation.style.display = 'flex';
  }
  
  tabContents.forEach(tab => {
    tab.style.display = 'block';
  });
  
  if (specificationPanel) {
    specificationPanel.style.display = 'block';
  }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
function showBlockingCard() {
  console.log('üîí showBlockingCard() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ heartbeat');
  debugLog('üîí –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', 'warning');
  
  const blockingCard = document.getElementById('blocking-card');
  const tabsNavigation = document.querySelector('.tabs-navigation');
  const tabContents = document.querySelectorAll('.tab-content');
  const specificationPanel = document.getElementById('specification-panel');

  if (blockingCard) {
    blockingCard.style.display = 'block';
  }
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ footer –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
  hideLicenseFooter();
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç–∞–±—ñ–≤
  if (tabsNavigation) {
    tabsNavigation.style.display = 'none';
  }
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤—Å—ñ —Ç–∞–±–∏
  tabContents.forEach(tab => {
    tab.style.display = 'none';
  });
  
  // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–∞–Ω–µ–ª—å —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  if (specificationPanel) {
    specificationPanel.style.display = 'none';
  }
  
  pluginBlocked = true;
  debugLog('üîí –ü–æ–∫–∞–∑–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'warning');
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
function hideBlockingCard() {
  console.log('‚úÖ hideBlockingCard() –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑ heartbeat');
  debugLog('‚úÖ –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', 'success');
  
  const blockingCard = document.getElementById('blocking-card');
  const tabsNavigation = document.querySelector('.tabs-navigation');
  const tabContents = document.querySelectorAll('.tab-content');
  const specificationPanel = document.getElementById('specification-panel');

  if (blockingCard) {
    blockingCard.style.display = 'none';
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ footer –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é —è–∫—â–æ –≤–æ–Ω–∞ —î
  updateLicenseStatusInUI();
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç–∞–±—ñ–≤
  if (tabsNavigation) {
    tabsNavigation.style.display = 'flex';
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–±
  const activeTabButton = document.querySelector('.tabs-navigation .tab-button.active');
  if (activeTabButton) {
    const activeTabId = activeTabButton.dataset.tab + '-tab';
    const activeTabContent = document.getElementById(activeTabId);
    if (activeTabContent) {
      activeTabContent.style.display = 'block';
    }
  }
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–Ω–µ–ª—å —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  if (specificationPanel) {
    specificationPanel.style.display = 'block';
  }
  
  pluginBlocked = false;
  debugLog('üîì –ü—Ä–∏—Ö–æ–≤–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–∫—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'info');
}

// –í—ñ–¥–∫—Ä–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–∫—É–ø–∫–∏
function openPurchasePage() {
  debugLog('üõí –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–∫—É–ø–∫–∏', 'info');
  // –¢—É—Ç –±—É–¥–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏
  window.open('https://progran3.com/purchase', '_blank');
}

// –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
function retryConnection() {
  debugLog('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è', 'info');
  checkServerBlockingStatus();
}


// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –ø–ª–∞–≥—ñ–Ω
function isPluginBlocked() {
  return pluginBlocked;
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ Ruby callback
function checkServerBlockingStatus() {
  debugLog('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞...', 'info');
  
  if (window.sketchup && window.sketchup.checkBlockingStatus) {
    window.sketchup.checkBlockingStatus();
  } else {
    debugLog('‚ùå Ruby callback checkBlockingStatus –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', 'error');
  }
}

// –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å–µ—Ä–≤–µ—Ä–∞
function updateBlockingStatusFromServer(isBlocked) {
  debugLog(`üì° –û—Ç—Ä–∏–º–∞–Ω–æ —Å—Ç–∞—Ç—É—Å –∑ —Å–µ—Ä–≤–µ—Ä–∞: ${isBlocked ? '–ó–ê–ë–õ–û–ö–û–í–ê–ù–û' : '–ê–ö–¢–ò–í–ù–ò–ô'}`, isBlocked ? 'warning' : 'success');
  
  if (isBlocked) {
    showBlockingCard();
  } else {
    hideBlockingCard();
  }
}

// –û–Ω–æ–≤–∏—Ç–∏ footer –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
function updateLicenseFooter(email, licenseKey) {
  const footer = document.getElementById('license-footer');
  const emailElement = document.getElementById('license-footer-email');
  const keyElement = document.getElementById('license-footer-key');
  
  if (footer && emailElement && keyElement) {
    emailElement.textContent = email;
    keyElement.textContent = licenseKey.substring(0, 8) + '...';
    footer.style.display = 'block';
    
    debugLog(`üìß Footer –æ–Ω–æ–≤–ª–µ–Ω–æ: ${email} + ${licenseKey.substring(0, 8)}...`, 'info');
  }
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ footer –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
function hideLicenseFooter() {
  const footer = document.getElementById('license-footer');
  if (footer) {
    footer.style.display = 'none';
    debugLog('üìß Footer –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ', 'info');
  }
}
