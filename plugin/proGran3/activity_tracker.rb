# plugin/proGran3/activity_tracker.rb
# –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –ø–ª–∞–≥—ñ–Ω–∞

module ProGran3
  module ActivityTracker
    extend self
    
    # –Ü–Ω—Ç–µ—Ä–≤–∞–ª heartbeat (10 —Ö–≤–∏–ª–∏–Ω)
    HEARTBEAT_INTERVAL = 600 # —Å–µ–∫—É–Ω–¥
    
    # –í–µ—Ä—Å—ñ—è –ø–ª–∞–≥—ñ–Ω–∞
    PLUGIN_VERSION = '1.0.0'
    
    # –°—Ç–∞—Ç—É—Å –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
    @tracking_enabled = false
    @heartbeat_timer = nil
    @session_start = nil
    @last_heartbeat = nil
    
    # –ó–∞–ø—É—Å–∫–∞—î –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
    def start_tracking
      return if @tracking_enabled
      
      puts "üìä –ó–∞–ø—É—Å–∫ Activity Tracker..."
      
      # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –ª—ñ—Ü–µ–Ω–∑—ñ—è
      license = get_license_info
      unless license && license[:has_license]
        puts "   ‚ö†Ô∏è –õ—ñ—Ü–µ–Ω–∑—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ - tracking –≤–∏–º–∫–Ω–µ–Ω–æ"
        return
      end
      
      @tracking_enabled = true
      @session_start = Time.now
      
      # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ startup event
      send_startup_event(license)
      
      # –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ heartbeat
      start_heartbeat_timer(license)
      
      puts "   ‚úÖ Activity Tracker –∑–∞–ø—É—â–µ–Ω–æ"
      puts "   üìç Session start: #{@session_start}"
      puts "   ‚è±Ô∏è Heartbeat interval: #{HEARTBEAT_INTERVAL}s (#{HEARTBEAT_INTERVAL / 60} —Ö–≤)"
      
    rescue => e
      puts "   ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É Activity Tracker: #{e.message}"
      @tracking_enabled = false
    end
    
    # –ó—É–ø–∏–Ω—è—î –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
    def stop_tracking
      return unless @tracking_enabled
      
      puts "üìä –ó—É–ø–∏–Ω–∫–∞ Activity Tracker..."
      
      # –ó—É–ø–∏–Ω–∫–∞ heartbeat timer
      if @heartbeat_timer
        UI.stop_timer(@heartbeat_timer)
        @heartbeat_timer = nil
      end
      
      # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ shutdown event (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
      license = get_license_info
      send_shutdown_event(license) if license && license[:has_license]
      
      @tracking_enabled = false
      puts "   ‚úÖ Activity Tracker –∑—É–ø–∏–Ω–µ–Ω–æ"
    end
    
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ startup event
    def send_startup_event(license)
      puts "   üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ startup event..."
      
      begin
        require_relative 'system/network/network_client'
        require_relative 'system/utils/device_identifier'
        
        fingerprint = ProGran3::System::Utils::DeviceIdentifier.generate[:fingerprint]
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ startup event —á–µ—Ä–µ–∑ heartbeat –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
        result = ProGran3::System::Network::NetworkClient.post_request('/api/heartbeats', {
          license_key: license[:license_key],
          system_fingerprint: fingerprint,
          event_type: 'startup',
          plugin_version: PLUGIN_VERSION,
          session_start: @session_start.iso8601,
          sketchup_version: Sketchup.version,
          platform: Sketchup.platform,
          timestamp: Time.now.to_i
        }, silent: true)
        
        if result[:success]
          puts "   ‚úÖ Startup event –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ"
        else
          puts "   ‚ö†Ô∏è Startup event –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: #{result[:error]}"
        end
        
      rescue => e
        puts "   ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ startup event: #{e.message}"
        # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ - –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–±–æ—Ç—É
      end
    end
    
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ shutdown event
    def send_shutdown_event(license)
      begin
        require_relative 'system/network/network_client'
        require_relative 'system/utils/device_identifier'
        
        fingerprint = ProGran3::System::Utils::DeviceIdentifier.generate[:fingerprint]
        session_duration = Time.now - @session_start
        
        ProGran3::System::Network::NetworkClient.post_request('/api/heartbeats', {
          license_key: license[:license_key],
          system_fingerprint: fingerprint,
          event_type: 'shutdown',
          plugin_version: PLUGIN_VERSION,
          session_duration: session_duration.to_i,
          timestamp: Time.now.to_i
        }, silent: true)
        
      rescue => e
        # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ shutdown
      end
    end
    
    # –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ heartbeat
    def start_heartbeat_timer(license)
      # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç–∞–π–º–µ—Ä –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–∏–π
      if @heartbeat_timer
        UI.stop_timer(@heartbeat_timer)
      end
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–µ—Ä —è–∫–∏–π –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∫–æ–∂–Ω—ñ HEARTBEAT_INTERVAL —Å–µ–∫—É–Ω–¥
      @heartbeat_timer = UI.start_timer(HEARTBEAT_INTERVAL, true) do
        send_heartbeat(license) if @tracking_enabled
      end
      
      puts "   ‚è±Ô∏è Heartbeat timer –∑–∞–ø—É—â–µ–Ω–æ"
    end
    
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ heartbeat
    def send_heartbeat(license)
      return unless @tracking_enabled
      
      begin
        require_relative 'system/network/network_client'
        require_relative 'system/utils/device_identifier'
        
        fingerprint = ProGran3::System::Utils::DeviceIdentifier.generate[:fingerprint]
        session_duration = Time.now - @session_start
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ heartbeat
        result = ProGran3::System::Network::NetworkClient.post_request('/api/heartbeats', {
          license_key: license[:license_key],
          system_fingerprint: fingerprint,
          event_type: 'heartbeat',
          plugin_version: PLUGIN_VERSION,
          session_duration: session_duration.to_i,
          session_start: @session_start.iso8601,
          sketchup_version: Sketchup.version,
          platform: Sketchup.platform,
          timestamp: Time.now.to_i
        }, silent: true)
        
        if result[:success]
          @last_heartbeat = Time.now
          puts "üíì Heartbeat –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ (session: #{format_duration(session_duration)})"
        else
          puts "‚ö†Ô∏è Heartbeat –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: #{result[:error]}" unless result[:offline]
        end
        
      rescue => e
        puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ heartbeat: #{e.message}"
        # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ - –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–±–æ—Ç—É
      end
    end
    
    # –ü—Ä–∏–º—É—Å–æ–≤–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ heartbeat (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
    def force_heartbeat
      license = get_license_info
      if license && license[:has_license]
        send_heartbeat(license)
      else
        puts "‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ heartbeat - –ª—ñ—Ü–µ–Ω–∑—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"
      end
    end
    
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ª—ñ—Ü–µ–Ω–∑—ñ—é
    def get_license_info
      require_relative 'system/core/session_manager'
      manager = ProGran3::System::Core::SessionManager.new
      manager.license_info
    rescue => e
      puts "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è license info: #{e.message}"
      nil
    end
    
    # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ
    def format_duration(seconds)
      hours = (seconds / 3600).to_i
      minutes = ((seconds % 3600) / 60).to_i
      
      if hours > 0
        "#{hours}–≥–æ–¥ #{minutes}—Ö–≤"
      else
        "#{minutes}—Ö–≤"
      end
    end
    
    # –°—Ç–∞—Ç—É—Å tracking
    def tracking_enabled?
      @tracking_enabled
    end
    
    # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é
    def session_info
      return nil unless @tracking_enabled
      
      {
        enabled: true,
        session_start: @session_start,
        session_duration: Time.now - @session_start,
        last_heartbeat: @last_heartbeat,
        heartbeat_interval: HEARTBEAT_INTERVAL,
        plugin_version: PLUGIN_VERSION
      }
    end
    
  end
end

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –º–æ–¥—É–ª—è (—è–∫—â–æ –ø–ª–∞–≥—ñ–Ω –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ)
if defined?(Sketchup) && Sketchup.active_model
  # –ó–∞–ø—É—Å–∫–∞—î–º–æ —á–µ—Ä–µ–∑ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É —â–æ–± –¥–∞—Ç–∏ —á–∞—Å —ñ–Ω—à–∏–º –º–æ–¥—É–ª—è–º –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏—Å—å
  UI.start_timer(5, false) do
    ProGran3::ActivityTracker.start_tracking
  end
end

