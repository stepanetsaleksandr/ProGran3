# deploy_to_sketchup.ps1
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø–ª–∞–≥—ñ–Ω–∞ –≤ –ø–∞–ø–∫—É SketchUp

param(
    [switch]$Watch,
    [string]$SketchUpVersion = "2023",
    [switch]$ListVersions,
    [switch]$Backup
)

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
$configPath = Join-Path $PSScriptRoot "config.json"
if (Test-Path $configPath) {
    $config = Get-Content $configPath | ConvertFrom-Json
    $defaultVersion = $config.default_version
    if (-not $SketchUpVersion -or $SketchUpVersion -eq "2023") {
        $SketchUpVersion = $defaultVersion
    }
} else {
    $config = @{
        sketchup_versions = @{
            "2023" = "%APPDATA%\SketchUp\SketchUp 2023\SketchUp\Plugins"
            "2022" = "%APPDATA%\SketchUp\SketchUp 2022\SketchUp\Plugins"
            "2021" = "%APPDATA%\SketchUp\SketchUp 2021\SketchUp\Plugins"
        }
        default_version = "2023"
    }
}

# –®–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –ø–ª–∞–≥—ñ–Ω—ñ–≤ SketchUp
$SKETCHUP_PLUGINS_PATH = $config.sketchup_versions.$SketchUpVersion -replace "%APPDATA%", $env:APPDATA

# –®–ª—è—Ö –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É
$CURRENT_PROJECT_PATH = Split-Path -Parent $MyInvocation.MyCommand.Path

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–¥—É–≤–∞–Ω–Ω—è UTF-8
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

Write-Host "üöÄ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω–∞ ProGran3..." -ForegroundColor Green

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –ø–∞–ø–∫–∞ –ø–ª–∞–≥—ñ–Ω—ñ–≤
if (-not (Test-Path $SKETCHUP_PLUGINS_PATH)) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ –ø–ª–∞–≥—ñ–Ω—ñ–≤ SketchUp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: $SKETCHUP_PLUGINS_PATH" -ForegroundColor Red
    Write-Host "üìù –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –ø–ª–∞–≥—ñ–Ω—ñ–≤ SketchUp" -ForegroundColor Yellow
    exit 1
}

# –®–ª—è—Ö–∏ –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
$sourceMainFile = Join-Path $CURRENT_PROJECT_PATH "proGran3.rb"
$sourceFolder = Join-Path $CURRENT_PROJECT_PATH "proGran3"
$targetMainFile = Join-Path $SKETCHUP_PLUGINS_PATH "proGran3.rb"
$targetFolder = Join-Path $SKETCHUP_PLUGINS_PATH "proGran3"

function Deploy-Plugin {
    try {
        # –ö–æ–ø—ñ—é—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª
        if (Test-Path $sourceMainFile) {
            Copy-Item $sourceMainFile $targetMainFile -Force
            Write-Host "‚úÖ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: proGran3.rb" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –§–∞–π–ª proGran3.rb –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" -ForegroundColor Red
            return $false
        }
        
        # –ö–æ–ø—ñ—é—î–º–æ –ø–∞–ø–∫—É proGran3
        if (Test-Path $sourceFolder) {
            if (Test-Path $targetFolder) {
                Remove-Item $targetFolder -Recurse -Force
            }
            Copy-Item $sourceFolder $targetFolder -Recurse -Force
            Write-Host "‚úÖ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: –ø–∞–ø–∫–∞ proGran3" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ü–∞–ø–∫–∞ proGran3 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Red
            return $false
        }
        
        Write-Host "üéâ –ü–ª–∞–≥—ñ–Ω —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ!" -ForegroundColor Green
        Write-Host "üìç –†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è: $SKETCHUP_PLUGINS_PATH" -ForegroundColor Cyan
        Write-Host "üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å SketchUp –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ProGran3.reload –≤ –∫–æ–Ω—Å–æ–ª—ñ Ruby" -ForegroundColor Yellow
        
        return $true
        
    } catch {
        Write-Host "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

function Watch-And-Deploy {
    Write-Host "üëÄ –†–µ–∂–∏–º —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –∑–º—ñ–Ω–∞–º–∏..." -ForegroundColor Cyan
    Write-Host "üìÅ –í—ñ–¥—Å—Ç–µ–∂—É—é –∑–º—ñ–Ω–∏ –≤: $CURRENT_PROJECT_PATH" -ForegroundColor Cyan
    Write-Host "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–ø—ñ—é–≤–∞—Ç–∏–º—É –∑–º—ñ–Ω–∏ –≤ SketchUp" -ForegroundColor Cyan
    Write-Host "‚èπÔ∏è  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏" -ForegroundColor Yellow
    
    $watcher = New-Object System.IO.FileSystemWatcher
    $watcher.Path = $CURRENT_PROJECT_PATH
    $watcher.IncludeSubdirectories = $true
    $watcher.EnableRaisingEvents = $true
    
    $action = {
        Write-Host "`nüîÑ –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏..." -ForegroundColor Yellow
        Deploy-Plugin
    }
    
    Register-ObjectEvent $watcher "Changed" -Action $action
    Register-ObjectEvent $watcher "Created" -Action $action
    Register-ObjectEvent $watcher "Deleted" -Action $action
    
    try {
        while ($true) { Start-Sleep -Seconds 1 }
    } catch {
        Write-Host "`nüëã –ó—É–ø–∏–Ω–µ–Ω–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è" -ForegroundColor Cyan
    }
}

function Show-Versions {
    Write-Host "üìã –î–æ—Å—Ç—É–ø–Ω—ñ –≤–µ—Ä—Å—ñ—ó SketchUp:" -ForegroundColor Cyan
    foreach ($version in $config.sketchup_versions.Keys) {
        $path = $config.sketchup_versions.$version -replace "%APPDATA%", $env:APPDATA
        $exists = Test-Path $path
        $status = if ($exists) { "‚úÖ" } else { "‚ùå" }
        Write-Host "  $status $version`: $path" -ForegroundColor $(if ($exists) { "Green" } else { "Red" })
    }
    Write-Host "`nüí° –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: .\deploy_to_sketchup.ps1 -SketchUpVersion '2022'" -ForegroundColor Yellow
}

function Backup-Plugin {
    Write-Host "üíæ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó..." -ForegroundColor Cyan
    
    $backupFolder = Join-Path $PSScriptRoot "backups"
    $timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
    $backupPath = Join-Path $backupFolder "backup_$timestamp"
    
    if (-not (Test-Path $backupFolder)) {
        New-Item -ItemType Directory -Path $backupFolder | Out-Null
    }
    
    if (Test-Path $targetMainFile) {
        Copy-Item $targetMainFile (Join-Path $backupPath "proGran3.rb") -Force
    }
    
    if (Test-Path $targetFolder) {
        Copy-Item $targetFolder (Join-Path $backupPath "proGran3") -Recurse -Force
    }
    
    Write-Host "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞: $backupPath" -ForegroundColor Green
}

# –ì–æ–ª–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
if ($ListVersions) {
    Show-Versions
} elseif ($Backup) {
    Backup-Plugin
} elseif ($Watch) {
    Watch-And-Deploy
} else {
    Deploy-Plugin
}
