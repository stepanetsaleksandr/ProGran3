// –ü—Ä–æ—Å—Ç–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ–π —á–µ—Ä–µ–∑ API
const https = require('https');

const API_BASE = 'https://progran3-tracking-server-84mng0cwn-provis3ds-projects.vercel.app';

async function makeRequest(path, method = 'GET', data = null) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'progran3-tracking-server-84mng0cwn-provis3ds-projects.vercel.app',
      port: 443,
      path: path,
      method: method,
      headers: {
        'Content-Type': 'application/json',
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', (chunk) => {
        body += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(body);
          resolve({ status: res.statusCode, data: result });
        } catch (e) {
          resolve({ status: res.statusCode, data: body });
        }
      });
    });

    req.on('error', (err) => {
      reject(err);
    });

    if (data) {
      req.write(JSON.stringify(data));
    }
    req.end();
  });
}

async function resetLicenses() {
  try {
    console.log('üßπ –°–∫–∏–¥–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –ª—ñ—Ü–µ–Ω–∑—É–≤–∞–Ω–Ω—è...');
    
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É...');
    const initResponse = await makeRequest('/api/init');
    console.log('üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:', initResponse.status);
    
    // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ...');
    try {
      const adminResponse = await makeRequest('/api/admin/licenses');
      console.log('üìä –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞:', adminResponse.status);
    } catch (e) {
      console.log('‚ö†Ô∏è –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø—É–±–ª—ñ—á–Ω–æ–≥–æ API)');
    }
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è');
    console.log('');
    console.log('üìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
    console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ SketchUp');
    console.log('2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: ProGran3::UI.show_dialog');
    console.log('3. –ü–ª–∞–≥—ñ–Ω –º–∞—î –±—É—Ç–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π');
    console.log('4. –í–≤–µ–¥—ñ—Ç—å —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó');
    console.log('');
    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ:');
    console.log('   Email: test@progran3.com');
    console.log('   –ö–ª—é—á: TQ58-IKVR-9X2M-7N4P');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  }
}

resetLicenses();
