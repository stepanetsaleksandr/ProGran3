// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –ª—ñ—Ü–µ–Ω–∑—ñ—ó –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
const https = require('https');

const API_BASE = 'https://progran3-tracking-server-cuy1q2xn9-provis3ds-projects.vercel.app';

async function makeRequest(path, method = 'GET', data = null) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'progran3-tracking-server-cuy1q2xn9-provis3ds-projects.vercel.app',
      port: 443,
      path: path,
      method: method,
      headers: {
        'Content-Type': 'application/json',
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', (chunk) => {
        body += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(body);
          resolve({ status: res.statusCode, data: result });
        } catch (e) {
          resolve({ status: res.statusCode, data: body });
        }
      });
    });

    req.on('error', (err) => {
      reject(err);
    });

    if (data) {
      req.write(JSON.stringify(data));
    }
    req.end();
  });
}

async function createFreshLicense() {
  console.log('üß™ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –ª—ñ—Ü–µ–Ω–∑—ñ—ó –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è');
  console.log('=' * 50);
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á
  const timestamp = Date.now().toString().slice(-8);
  const licenseKey = `TEST-${timestamp}-FRESH`;
  
  console.log(`üîë –ù–æ–≤–∏–π –∫–ª—é—á –ª—ñ—Ü–µ–Ω–∑—ñ—ó: ${licenseKey}`);
  
  // –¢–µ—Å—Ç—É—î–º–æ –∞–∫—Ç–∏–≤–∞—Ü—ñ—é –∑ –Ω–æ–≤–∏–º –∫–ª—é—á–µ–º
  console.log('\nüìù –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó:');
  
  try {
    const activationData = {
      email: 'test@progran3.com',
      license_key: licenseKey,
      hardware_id: 'test-hardware-id-123'
    };
    
    const response = await makeRequest('/api/license/register-simple', 'POST', activationData);
    
    console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}`);
    console.log(`   –í—ñ–¥–ø–æ–≤—ñ–¥—å: ${JSON.stringify(response.data, null, 2)}`);
    
    if (response.status === 404) {
      console.log(`   ‚ùå –õ—ñ—Ü–µ–Ω–∑—ñ—è ${licenseKey} –Ω–µ —ñ—Å–Ω—É—î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö`);
      console.log(`   üí° –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ª—ñ—Ü–µ–Ω–∑—ñ—é –≤—Ä—É—á–Ω—É –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö`);
    } else if (response.status === 200) {
      console.log(`   ‚úÖ –õ—ñ—Ü–µ–Ω–∑—ñ—è ${licenseKey} –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!`);
    }
  } catch (error) {
    console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
  }
  
  console.log('\n' + '=' * 50);
  console.log('üìã –Ü–ù–°–¢–†–£–ö–¶–Ü–á –î–õ–Ø –¢–ï–°–¢–£–í–ê–ù–ù–Ø:');
  console.log('');
  console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ SketchUp');
  console.log('2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: ProGran3::UI.show_dialog');
  console.log('3. –í–≤–µ–¥—ñ—Ç—å —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ:');
  console.log(`   Email: test@progran3.com`);
  console.log(`   –ö–ª—é—á: ${licenseKey}`);
  console.log('4. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ª—ñ—Ü–µ–Ω–∑—ñ—é"');
  console.log('');
  console.log('‚ö†Ô∏è  –Ø–∫—â–æ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–º–∏–ª–∫—É 404, —Ü–µ –æ–∑–Ω–∞—á–∞—î —â–æ –ª—ñ—Ü–µ–Ω–∑—ñ—è –Ω–µ —ñ—Å–Ω—É—î –≤ –±–∞–∑—ñ');
  console.log('   —ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —ó—ó –≤—Ä—É—á–Ω—É —á–µ—Ä–µ–∑ SQL –∞–±–æ admin –ø–∞–Ω–µ–ª—å');
}

createFreshLicense();
