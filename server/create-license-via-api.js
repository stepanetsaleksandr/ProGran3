// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó —á–µ—Ä–µ–∑ admin API
const https = require('https');

const API_BASE = 'https://progran3-tracking-server-cuy1q2xn9-provis3ds-projects.vercel.app';

async function makeRequest(path, method = 'GET', data = null) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'progran3-tracking-server-cuy1q2xn9-provis3ds-projects.vercel.app',
      port: 443,
      path: path,
      method: method,
      headers: {
        'Content-Type': 'application/json',
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', (chunk) => {
        body += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(body);
          resolve({ status: res.statusCode, data: result });
        } catch (e) {
          resolve({ status: res.statusCode, data: body });
        }
      });
    });

    req.on('error', (err) => {
      reject(err);
    });

    if (data) {
      req.write(JSON.stringify(data));
    }
    req.end();
  });
}

async function createLicense() {
  try {
    console.log('üß™ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó —á–µ—Ä–µ–∑ admin API...');
    
    const testLicense = {
      license_key: 'TEST-1234-5678-9ABC',
      days_valid: 30,
      max_activations: 1,
      is_active: true
    };
    
    console.log(`üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó: ${testLicense.license_key}...`);
    
    try {
      const response = await makeRequest('/api/admin/licenses', 'POST', testLicense);
      
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log('üìä –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(response.data, null, 2));
      
      if (response.status === 200 || response.status === 201) {
        console.log(`‚úÖ –õ—ñ—Ü–µ–Ω–∑—ñ—è ${testLicense.license_key} —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ`);
      } else {
        console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó: ${response.status}`);
      }
    } catch (error) {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: ${error.message}`);
    }
    
    console.log('');
    console.log('üéØ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó...');
    
    // –¢–µ—Å—Ç—É—î–º–æ –∞–∫—Ç–∏–≤–∞—Ü—ñ—é
    const activationData = {
      email: 'test@progran3.com',
      license_key: 'TEST-1234-5678-9ABC',
      hardware_id: 'test-hardware-id-123'
    };
    
    try {
      const activationResponse = await makeRequest('/api/license/register-simple', 'POST', activationData);
      
      console.log(`üìä –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: ${activationResponse.status}`);
      console.log('üìä –í—ñ–¥–ø–æ–≤—ñ–¥—å –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó:', JSON.stringify(activationResponse.data, null, 2));
      
      if (activationResponse.status === 200) {
        console.log(`‚úÖ –õ—ñ—Ü–µ–Ω–∑—ñ—è –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ`);
      } else {
        console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: ${activationResponse.status}`);
      }
    } catch (error) {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: ${error.message}`);
    }
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—Ü–µ–Ω–∑—ñ—ó:', error.message);
  }
}

createLicense();
